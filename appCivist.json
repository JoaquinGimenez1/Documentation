{
  "swagger" : "2.0",
  "info" : {
    "description" : "AppCivist is a software platform for democratic assembly and collective action that lets users organize Assemblies, Campaign and Working Groups as spaces for contribution and decision making",
    "version" : "beta",
    "title" : "AppCivist Core API",
    "contact" : {
      "name" : "Cristhian Parra (cdparra [at] berkeley [dot] edu. Social Apps Lab @ UC Berkeley"
    },
    "license" : {
      "name" : "",
      "url" : "http://licenseUrl"
    }
  },
  "host" : "testplatform.appcivist.org",
  "basePath" : "/backend",
  "tags" : [ {
    "name" : "03 campaign: Campaign Management"
  }, {
    "name" : "00 user: User Management"
  }, {
    "name" : "05 contribution: Contribution Making"
  }, {
    "name" : "04 membership: Membership management (for assemblies and working groups)"
  }, {
    "name" : "08: Other"
  }, {
    "name" : "01 assembly: Assembly Making"
  }, {
    "name" : "10 configuration: configuration management"
  }, {
    "name" : "09 space: resource space management"
  }, {
    "name" : "07 files: Upload files"
  }, {
    "name" : "06 notification: Notifications management"
  }, {
    "name" : "02 group: Working Group Management"
  } ],
  "paths" : {
    "/" : {
      "get" : {
        "tags" : [ "08: Other" ],
        "operationId" : "index",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/assembly" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get list of assemblies based on query",
        "description" : "",
        "operationId" : "findAssemblies",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Search query string (keywords in title)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Special filters. 'summary' returns only summarized info of assemblies, 'featured' returns a list of marks featured assemblies and 'nearby' limits the query to assemblies that are nearby of the user location, ",
          "required" : false,
          "type" : "string",
          "enum" : [ "featured", "nearby", "summary", "random" ]
        }, {
          "name" : "shortname",
          "in" : "query",
          "description" : "Search by shortname",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Assembly"
              }
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Create a new assembly",
        "description" : "The templates will be used to import all the resources from a list of existing assembly to the new",
        "operationId" : "createAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templates",
          "in" : "query",
          "description" : "List of assembly ids (separated by comma) to use as template for the current assembly",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invitations",
          "in" : "query",
          "description" : "Send invitations if true",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "in" : "body",
          "name" : "Assembly Object",
          "description" : "Body of Assembly in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Assembly"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AssemblyTransfer"
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "List campaigns of an Assembly",
        "description" : "",
        "operationId" : "findCampaignsByAssemblyId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter campaign by status (ongoing, past, upcoming, all)",
          "required" : false,
          "type" : "string",
          "default" : "ongoing",
          "enum" : [ "ongoing", "past", "future", "all" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Campaign"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Create a new Campaign",
        "description" : "Only for COORDINATORS. The templates will be used to import all the resources from a list of existing campaigns to the new",
        "operationId" : "createCampaignInAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "templates",
          "in" : "query",
          "description" : "List of campaign ids (separated by comma) to use as template for the current campaign",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Campaign simplified object",
          "description" : "Campaign in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CampaignTransfer"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CampaignTransfer"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{caid}/contribution/{cid}/feedback" : {
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Update Feedback on a Contribution",
        "description" : "Feedback on a contribution is a summary of its ups/downs/favs (TBD if this endpoint will remain)",
        "operationId" : "updateContributionFeedback",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "caid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Contribution Statistics object",
          "description" : "Body of Contribution Statistics in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContributionStatistics"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ASSEMBLY_ID",
          "in" : "header",
          "description" : "The real author of the post",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_SOURCE",
          "in" : "header",
          "description" : "Indicates the name of the providerId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_SOURCE_URL",
          "in" : "header",
          "description" : "Source to the original post",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_USER_SOURCE_ID",
          "in" : "header",
          "description" : "Email or id of the user in the source social network",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_USER_SOURCE_URL",
          "in" : "header",
          "description" : "Link to the user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_USER_NAME",
          "in" : "header",
          "description" : "User name in source",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "IGNORE_ADMIN_USER",
          "in" : "header",
          "description" : "Boolean that indicates if AppCivist should or should not consider the ADMIN user as author",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContributionStatistics"
              }
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Read campaign by campaign and assembly IDs",
        "description" : "",
        "operationId" : "findCampaignByAssemblyId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Update a campaign by its ID and the assembly ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Campaign object",
          "description" : "Campaign in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Campaign"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Delete campaign by campaign and assembly IDs",
        "description" : "Only for COORDINATOS of assembly",
        "operationId" : "deleteCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/component/{ciid}/contribution" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions in a component of a campaign within an assembly",
        "description" : "",
        "operationId" : "findCampaignComponentContributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "ciid",
          "in" : "path",
          "description" : "Component ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "default" : "idea",
          "enum" : [ "forum_post", "comment", "idea", "question", "issue", "proposal", "note", "discussion" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/components" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's components",
        "description" : "Only for COORDINATORS",
        "operationId" : "listCampaignComponents",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Component"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions in a Campaign",
        "description" : "",
        "operationId" : "findCampaignContributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "default" : "idea",
          "enum" : [ "forum_post", "comment", "idea", "question", "issue", "proposal", "note", "discussion" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/export" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Export campaign ideas to a CSV file",
        "description" : "",
        "operationId" : "exportContributions",
        "produces" : [ "application/csv" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/import" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Import CSV file with campaign ideas or proposals",
        "description" : "CSV format: the values must be separated by coma (;). If the theme column has more than one theme, then it must be separated by dash (-).",
        "operationId" : "importContributions",
        "consumes" : [ "application/csv" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Contribution Type",
          "required" : false,
          "type" : "string",
          "default" : "IDEA",
          "enum" : [ "IDEA", "PROPOSAL" ]
        }, {
          "name" : "createThemes",
          "in" : "query",
          "description" : "Contribution Type",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "CSV file",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/template" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Get list of available campaign templates",
        "description" : "Get list of available campaign templates",
        "operationId" : "findContributionTemplatesInCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Resource"
              }
            }
          },
          "404" : {
            "description" : "No Campaign Template Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Create a new Contribution Template for the campaign",
        "description" : "Only for COORDINATORS",
        "operationId" : "createContributionTemplateInCampaign",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "text",
          "description" : "Template Body Text",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/template/{rid}" : {
      "put" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Confirm Contribution Template",
        "description" : "",
        "operationId" : "confirmContributionTemplateInCampaign",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "Resource ID",
          "in" : "path",
          "description" : "Contribution Template",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Delete campaign cotribution template",
        "description" : "Only for COORDINATOS of assembly",
        "operationId" : "deleteContributionTemplateInCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "rid",
          "in" : "path",
          "description" : "Resource ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/{coid}/body" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get the pad body url of a Contribution in a Assembly",
        "description" : "",
        "operationId" : "findAssemblyContributionPadBody",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "rev",
          "in" : "query",
          "description" : "Revision",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int64"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "String",
          "required" : false,
          "type" : "string",
          "default" : "html",
          "enum" : [ "text", "html" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/{coid}/document" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Publishes a Contribution",
        "description" : "",
        "operationId" : "createPad",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "typeDocument",
          "in" : "query",
          "description" : "Type of document",
          "required" : false,
          "type" : "string",
          "default" : "etherpad"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/{coid}/feedback" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions feedbacks",
        "description" : "",
        "operationId" : "readContributionFeedbacks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContributionFeedback"
              }
            }
          },
          "404" : {
            "description" : "No contribution feedbacks found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/{coid}/feedback/{fid}" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get individual ContributionFeedback",
        "description" : "",
        "operationId" : "readContributionFeedback",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fid",
          "in" : "path",
          "description" : "Feedback ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ContributionFeedback"
            }
          },
          "404" : {
            "description" : "No contribution feedback found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/{coid}/stats" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions statistics",
        "description" : "",
        "operationId" : "readContributionStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ContributionStatistics"
            }
          },
          "404" : {
            "description" : "No contribution stats found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/contribution/{coid}/userfeedback" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Read contribution Feedback",
        "description" : "Feedback on a contribution is a summary of its ups/downs/favs (TBD if this endpoint will remain)",
        "operationId" : "readContributionFeedbackByUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ContributionFeedback"
            }
          },
          "400" : {
            "description" : "ContributionFeedback form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/description" : {
      "put" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Update a campaign description by its ID and the assembly ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateCampaignDescription",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Campaign object",
          "description" : "Campaign in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Campaign"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/group" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "List of groups created in a campaign",
        "description" : "",
        "operationId" : "findWorkingGroupsInCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkingGroup"
              }
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Create a Working Group in the Campaign identified by ID",
        "description" : "This will also add the Working Gorup to the Assembly organizing this campaign. Only for COORDINATORS",
        "operationId" : "createWorkingGroupInCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "invitations",
          "in" : "query",
          "description" : "Send invitations if true",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "in" : "body",
          "name" : "Working Group Object",
          "description" : "New Working Group in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroup"
            }
          },
          "400" : {
            "description" : "Group create error",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/group/{gid}/assignments" : {
      "post" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Assigns contributions to the working group",
        "description" : "",
        "operationId" : "assignContributionsToGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroup"
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/group/{gid}/contribution/{coid}/stats" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get workgroup contributions statistics",
        "description" : "",
        "operationId" : "readWGContributionStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gud",
          "in" : "path",
          "description" : "Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ContributionStatistics"
            }
          },
          "404" : {
            "description" : "No contribution stats found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/group/{gid}/description" : {
      "put" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Update a group description by its ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateCampaignGroupDescription",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Group object",
          "description" : "Group in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroup"
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/group/{gid}/member" : {
      "post" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Upload users to assembly",
        "description" : "",
        "operationId" : "uploadGroupUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "send_invitations",
          "in" : "query",
          "description" : "Send invitations if true",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "CSV file",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/groups" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's working groups",
        "description" : "Only for COORDINATORS",
        "operationId" : "listCampaignGroups",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkingGroup"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/resource" : {
      "post" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Create a new Resource for the campaign",
        "description" : "Only for COORDINATORS",
        "operationId" : "createCampaignResource",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/resources" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's resources",
        "description" : "Only for COORDINATORS",
        "operationId" : "listCampaignResources",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Resource"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/themes" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's themes",
        "description" : "Only for COORDINATORS",
        "operationId" : "listCampaignThemes",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "themeType",
          "in" : "query",
          "description" : "String",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "String",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Theme"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/campaign/{cid}/timeline" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's timeline",
        "description" : "Only for COORDINATORS",
        "operationId" : "listCampaignTimeline",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CampaignTimelineEdge"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/config" : {
      "get" : {
        "tags" : [ "10 configuration: configuration management" ],
        "operationId" : "findConfigs",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "10 configuration: configuration management" ],
        "summary" : "Add configuration to the assembly",
        "description" : "If assembly is coordinated, only COORDINATORS can access this encpoint",
        "operationId" : "createConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Assembly id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "config_form",
          "description" : "configuration details in body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Config"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Assembly"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/config/{cid}" : {
      "get" : {
        "tags" : [ "10 configuration: configuration management" ],
        "operationId" : "findConfig",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "10 configuration: configuration management" ],
        "operationId" : "updateConfig",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "10 configuration: configuration management" ],
        "operationId" : "deleteConfig",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions in Assembly",
        "description" : "",
        "operationId" : "findAssemblyContributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "space",
          "in" : "query",
          "description" : "Resource space name within assembly from which we want to query contributions",
          "required" : false,
          "type" : "string",
          "default" : "forum",
          "enum" : [ "forum", "resources" ]
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "default" : "idea",
          "enum" : [ "forum_post", "comment", "idea", "question", "issue", "proposal", "note", "discussion" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/template" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get list of available contribution templates in assembly",
        "description" : "",
        "operationId" : "findContributionTemplatesInAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "url"
              }
            }
          },
          "404" : {
            "description" : "No Contribution Template Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Create a new Contribution Template in an assembly",
        "description" : "Only for COORDINATORS",
        "operationId" : "createContributionTemplateInAssembly",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/template/{rid}" : {
      "put" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Confirm Contribution Template",
        "description" : "",
        "operationId" : "confirmContributionTemplateInAssembly",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "Resource ID",
          "in" : "path",
          "description" : "Contribution Template",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No contribution template found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Delete contribution template from assembly",
        "description" : "Only for COORDINATOS of assembly",
        "operationId" : "deleteContributionTemplateInAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "rid",
          "in" : "path",
          "description" : "Resource ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contribution by ID",
        "description" : "",
        "operationId" : "findContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Update contribution in Assembly",
        "description" : "",
        "operationId" : "updateContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Delete a contribution (will remove it from the database)",
        "description" : "Only for ADMINS",
        "operationId" : "forceDeleteContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/attachment" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Add an attachment to a contribution",
        "description" : "An attachment is a RESOURCE (with an URL) added to the 'resources' resource space of a Contribution",
        "operationId" : "addAttachmentContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Attachment object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "400" : {
            "description" : "Resource form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/comment" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Read comments on a Contribution",
        "description" : "",
        "operationId" : "findContributionComments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create comment on contribution",
        "description" : "",
        "operationId" : "createContributionComment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/contributions" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Read associated contributions of a Contribution",
        "description" : "",
        "operationId" : "findAssociatedContributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/history" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions change history",
        "description" : "",
        "operationId" : "getContributionsChangeHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContributionHistory"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/moderate" : {
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Contribution moderation. Soft deletes contribution",
        "description" : "",
        "operationId" : "moderateContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/padid" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get the pad of a Contribution",
        "description" : "",
        "operationId" : "findContributionPadId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PadTransfer"
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/recover" : {
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Logical recovery of contribution Assembly",
        "description" : "",
        "operationId" : "recoverContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/softremoval" : {
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Logical removal of contribution in Assembly",
        "description" : "",
        "operationId" : "softDeleteContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/space/{sid}" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Assign a contribution to a resource space",
        "description" : "",
        "operationId" : "assignContributionResourceSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Delete a contribution to a resource space",
        "description" : "",
        "operationId" : "deleteContributionResourceSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{cid}/status/{status}" : {
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Update status of a Contribution",
        "description" : "",
        "operationId" : "updateContributionStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "New Status for the Contribution",
          "required" : true,
          "type" : "string",
          "enum" : [ "NEW", "PUBLISHED", "EXCLUDED", "ARCHIVED" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "500" : {
            "description" : "Status not valid",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contribution/{coid}/feedback" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get Contribution Feedbacks",
        "description" : "",
        "operationId" : "readContributionFeedbackNoGroupId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContributionFeedback"
              }
            }
          },
          "404" : {
            "description" : "No contribution feedbacks found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/contributions/popularity" : {
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Response status",
        "description" : "",
        "operationId" : "updateContributionsPopularity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/forumpost" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create Assembly forum post",
        "description" : "An Assembly Forum POST is a contribution of type FORUM_POST in the 'forum' resource space of an Assembly",
        "operationId" : "createAssemblyForumPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "List groups of an assembly",
        "description" : "",
        "operationId" : "findWorkingGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkingGroup"
              }
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Create a new working group",
        "description" : "Only for COORDINATORS",
        "operationId" : "createWorkingGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "invitations",
          "in" : "query",
          "description" : "Send invitations if true",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "in" : "body",
          "name" : "Working Group Object",
          "description" : "New Working Group in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroup"
            }
          },
          "400" : {
            "description" : "group create error",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/location/{location_name}" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "List groups with specific location name",
        "description" : "",
        "operationId" : "findWorkingGroupsByLocationName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "location_name",
          "in" : "path",
          "description" : "Location Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkingGroup"
              }
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Get working group by ID",
        "description" : "",
        "operationId" : "findWorkingGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroup"
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Update Working Group by ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateWorkingGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "aid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Working Group Object",
          "description" : "New Working Group in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "400" : {
            "description" : "Group create error",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Delete group by ID",
        "description" : "",
        "operationId" : "deleteWorkingGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}/ballot" : {
      "post" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Creates new Consensus Ballot from selected/remaining proposals in working group",
        "description" : "",
        "operationId" : "nextBallotForWorkingGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Ballot"
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Creates new Consensus Ballot from selected/remaining proposals in working group",
        "description" : "",
        "operationId" : "archiveWorkingGroupsBallot",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Ballot"
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}/contribution" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions in a Working Group",
        "description" : "",
        "operationId" : "findAssemblyGroupContributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "space",
          "in" : "query",
          "description" : "Resource space name within the working group from which we want to query contributions",
          "required" : false,
          "type" : "string",
          "default" : "forum",
          "enum" : [ "forum", "resources" ]
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "default" : "idea",
          "enum" : [ "forum_post", "comment", "idea", "question", "issue", "proposal", "note", "discussion" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create contributions in the Working Group of an Assembly",
        "description" : "",
        "operationId" : "createAssemblyGroupContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "space",
          "in" : "query",
          "description" : "Resource Space within Working Group",
          "required" : false,
          "type" : "string",
          "default" : "resources",
          "enum" : [ "resources", "forum" ]
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}/contribution/{coid}/feedback" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get Contribution Feedbacks",
        "description" : "",
        "operationId" : "readContributionFeedbackPrivate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContributionFeedback"
              }
            }
          },
          "404" : {
            "description" : "No contribution feedbacks found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}/contributions" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Get working group CONTRIBUTIONS",
        "description" : "",
        "operationId" : "listWorkingGroupContributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}/forumpost" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Crete forum post in Working Group",
        "description" : "A forum post is a contribution of type FORUM_POST in the the 'forum' resource space of the Working Group",
        "operationId" : "createWorkingGroupForumPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}/proposals" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Get working group PROPOSALS",
        "description" : "",
        "operationId" : "listWorkingGroupProposals",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}/proposals/{pid}/publish" : {
      "put" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Publishes a Contribution",
        "description" : "",
        "operationId" : "publishProposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{gid}/user/{uid}" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Get Working Group Memberships by user ID",
        "description" : "",
        "operationId" : "isUserMemberOfGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "User is not Member of Group",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{id}/membership/{status}" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Get Working Group Memberships by ID and status",
        "description" : "",
        "operationId" : "listMembershipsWithStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "Status of membership invitation or request",
          "required" : true,
          "type" : "string",
          "enum" : [ "REQUESTED", "INVITED", "FOLLOWING", "ALL" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Membership"
              }
            }
          },
          "404" : {
            "description" : "No membership in this group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/group/{id}/membership/{type}" : {
      "post" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Add membership to the working group",
        "description" : "Only for COORDINATORS",
        "operationId" : "createGroupMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "Type",
          "in" : "path",
          "description" : "Type of Membership",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Membership simplified object",
          "description" : "membership's form in body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Membership"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          },
          "400" : {
            "description" : "mebership create error",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/linked" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get list of linked assemblies to a single assembly",
        "description" : "",
        "operationId" : "findAssembliesLinked",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Assembly"
              }
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/member" : {
      "post" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Upload users to assembly",
        "description" : "",
        "operationId" : "uploadAssemblyUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "send_invitations",
          "in" : "query",
          "description" : "Send invitations if true",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "CSV file",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/public" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get assembly profile if it is listed or if it is in the list of linked assemblies",
        "description" : "",
        "operationId" : "getListedLinkedAssemblyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AssemblySummaryTransfer"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{aid}/user/{uid}" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Verify if user is member of an assembly",
        "description" : "",
        "operationId" : "isUserMemberOfAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "No membership in this group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{id}" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Read Assembly by ID",
        "description" : "Only for MEMBERS of the assembly",
        "operationId" : "findAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Assembly"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Update Assembly by ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Assembly Object",
          "description" : "Body of Assembly in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Assembly"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Assembly"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Delete Assembly by ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "deleteAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{id}/assembly" : {
      "post" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Create a new assembly in a principal assembly",
        "description" : "",
        "operationId" : "createAssemblyInAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the principal assembly under which to create the new",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "templates",
          "in" : "query",
          "description" : "List of assembly ids (separated by comma) to use as template for the current assembly",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invitations",
          "in" : "query",
          "description" : "Send invitations if true",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "in" : "body",
          "name" : "Assembly Object",
          "description" : "Body of Assembly in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Assembly"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AssemblyTransfer"
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{id}/invitations" : {
      "post" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Add membership to the assembly by listing AppCivist's users emails",
        "description" : "Only for COORDINATORS",
        "operationId" : "inviteNewMembers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Membership simplified object",
          "description" : "List of membership's form in the body including only the target's user email",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Membership"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Pair"
              }
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{id}/membership/{status}" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get Assembly Memberships by ID and status",
        "description" : "Only for MEMBERS of the assembly",
        "operationId" : "listMembershipsWithStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Assembly id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "Status of membership invitation or request",
          "required" : true,
          "enum" : [ "REQUESTED", "INVITED", "FOLLOWING", "ALL" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Membership"
              }
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/assembly/{id}/membership/{type}" : {
      "post" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Add membership to the assembly",
        "description" : "Only for COORDINATORS",
        "operationId" : "createAssemblyMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "Type of membership",
          "required" : true,
          "type" : "string",
          "enum" : [ "INVITATION", "REQUEST", "SUBSCRIPTION" ]
        }, {
          "in" : "body",
          "name" : "Membership simplified object",
          "description" : "Membership's form in body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Membership"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/campaign/template" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Get list of available campaign templates",
        "description" : "Get list of available campaign templates",
        "operationId" : "findCampaignTemplates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CampaignTemplate"
              }
            }
          },
          "404" : {
            "description" : "No Campaign Template Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/clean/feedback" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Archives duplicated feedbacks",
        "description" : "",
        "operationId" : "cleanUnarchivedContributionFeedbacks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/clean/history" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Delete duplicate contributions change history",
        "description" : "",
        "operationId" : "deleteUnchangedContributionHistories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/history" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Generates histories for all contributions",
        "description" : "",
        "operationId" : "createHistories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/language" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Update all contribution languages",
        "description" : "",
        "operationId" : "updateAllContributionLanguages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "500" : {
            "description" : "Status not valid",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/pad" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create a new propolsal from contribution template",
        "description" : "",
        "operationId" : "createContributionPad",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "query",
          "description" : "Assembly ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cid",
          "in" : "query",
          "description" : "Contribution ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create a new Campaign",
        "description" : "",
        "operationId" : "confirmContributionPad",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid",
          "in" : "query",
          "description" : "Resource (that represents that PAD) ID",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No resource found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/{coid}/body" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get the pad body url of a Contribution",
        "description" : "",
        "operationId" : "findContributionPadBody",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "couuid",
          "in" : "path",
          "description" : "Contribution UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rev",
          "in" : "query",
          "description" : "Revision",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int64"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "String",
          "required" : false,
          "type" : "string",
          "default" : "html",
          "enum" : [ "text", "html" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/{uuid}/authors" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Add a author to a contribution",
        "description" : "",
        "operationId" : "addAuthorToContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Contribution's Universal Id (UUID)",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Authors objects",
          "description" : "Authors to add to the contribution",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/{uuid}/authors/{auuid}" : {
      "delete" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Add a author to a contribution",
        "description" : "",
        "operationId" : "deleteAuthorFromContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Contribution's Universal Id (UUID)",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "auuid",
          "in" : "path",
          "description" : "Author's Universal Id (UUID)",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Authors objects",
          "description" : "Authors to add to the contribution",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/{uuid}/themes" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Add themes to a contribution",
        "description" : "",
        "operationId" : "addThemeToContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Contribution's Universal Id (UUID)",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Theme objects",
          "description" : "Themes to add to the contribution",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ThemeListTransfer"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Theme"
              }
            }
          },
          "400" : {
            "description" : "Theme form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contribution/{uuid}/themes/{tid}" : {
      "delete" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Add a theme to a contribution",
        "description" : "",
        "operationId" : "deleteThemeFromContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Contribution's Universal Id (UUID)",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tid",
          "in" : "path",
          "description" : "Theme's Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Theme objects",
          "description" : "Themes to add to the contribution",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ThemeListTransfer"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/contributions" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "List contributions",
        "description" : "",
        "operationId" : "all",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page to retrieve",
          "required" : false,
          "type" : "string",
          "default" : "1"
        }, {
          "name" : "by_uuid",
          "in" : "query",
          "description" : "Filter contributions by UUID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "by_theme_id",
          "in" : "query",
          "description" : "Filter contributions by theme",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of contributions",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseTransfer"
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/doc" : {
      "get" : {
        "tags" : [ "08: Other" ],
        "summary" : "API Swagger-UI documentation",
        "description" : "",
        "operationId" : "swaggerDocs",
        "produces" : [ "text/html" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          }
        }
      }
    },
    "/api/log" : {
      "post" : {
        "tags" : [ "08: Other" ],
        "summary" : "Log an action",
        "description" : "",
        "operationId" : "logActivity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "log",
          "description" : "Body of Log in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Log"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Log"
            }
          },
          "404" : {
            "description" : "User session not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/log/front" : {
      "post" : {
        "tags" : [ "08: Other" ],
        "summary" : "Log an error in the frontend",
        "description" : "",
        "operationId" : "logErrorFrontEnd",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Error object",
          "description" : "Body of Error in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FrontEndError"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Log"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/log/public" : {
      "post" : {
        "tags" : [ "08: Other" ],
        "summary" : "Log an action",
        "description" : "",
        "operationId" : "logActivityPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "log",
          "description" : "Body of Log in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Log"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Log"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership" : {
      "post" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Create a membership with any desired status within an Assembly or a Group. Endpoint available only to ADMINS.",
        "description" : "",
        "operationId" : "createMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Membership Simplified Object",
          "description" : "The membership to create",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Membership"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          },
          "202" : {
            "description" : "Membership was created",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          },
          "400" : {
            "description" : "Membership body has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/assembly/{aid}" : {
      "post" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Create and send an Invitation to join an Assembly",
        "description" : "Only available to COORDINATORS",
        "operationId" : "createSendInvitationToJoinAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Invation Object",
          "description" : "Invitation details",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InvitationTransfer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InvitationTransfer"
            }
          }
        }
      }
    },
    "/api/membership/assembly/{aid}/user/{uid}" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Read membership record of an user within a specified assembly",
        "description" : "",
        "operationId" : "readUserMembershipInAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Membership found",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          },
          "404" : {
            "description" : "Membership not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/group/{gid}" : {
      "post" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Create and send an invitation to join a Group to a non-AppCivist user ",
        "description" : "",
        "operationId" : "createSendInvitationToJoinGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InvitationTransfer"
            }
          }
        }
      }
    },
    "/api/membership/group/{gid}/user/{uid}" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Read membership record of a user within a group",
        "description" : "Only available to COORDINATORS",
        "operationId" : "readUserMembershipInGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Membership found",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          },
          "404" : {
            "description" : "Membership not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/group/{id}/request" : {
      "post" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Create a membership request for an Assembly or a Group",
        "description" : "",
        "operationId" : "createMembershipRequest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "description" : "ID of the target Assembly or Group",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Membership simplified object",
          "description" : "A membership simplified object with details of the target assembly or group and the user requesting membership",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Membership"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          }
        }
      }
    },
    "/api/membership/invitation/{iid}/email" : {
      "post" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Resend invitation",
        "description" : "",
        "operationId" : "reSendInvitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "iid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "iid",
          "in" : "path",
          "description" : "Invitation id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InvitationTransfer"
            }
          }
        }
      }
    },
    "/api/membership/invitation/{targetId}/{status}" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Get the list of invitations to the target Group or Assembly",
        "description" : "",
        "operationId" : "listInvitations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "description" : "Working Group or Assembly Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "Invitation Status",
          "required" : true,
          "type" : "string",
          "enum" : [ "INVITED", "ACCEPTED", "REJECTED" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MembershipInvitation"
              }
            }
          },
          "202" : {
            "description" : "Invitations found",
            "schema" : {
              "$ref" : "#/definitions/MembershipInvitation"
            }
          },
          "404" : {
            "description" : "Invitations not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/invitation/{token}" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Read an invitation by Token",
        "description" : "",
        "operationId" : "readInvitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "Invitation Token",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MembershipInvitation"
            }
          }
        }
      }
    },
    "/api/membership/invitation/{token}/{answer}" : {
      "put" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Update invitation status",
        "description" : "",
        "operationId" : "answerInvitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "Invitation token",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "answer",
          "in" : "path",
          "description" : "Answer to the Invitation",
          "required" : true,
          "type" : "string",
          "enum" : [ "ACCEPT", "REJECT" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/api/membership/user/{uid}" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Read user memberships by User ID and Membership TYPE",
        "description" : "This endpoint is only accessible to ADMIN users and to the User identified by the provided UUID",
        "operationId" : "findMembershipByUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of memberships to read",
          "required" : false,
          "type" : "string",
          "enum" : [ "assembly", "group" ]
        }, {
          "name" : "by_assembly",
          "in" : "query",
          "description" : "AssemblyId",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Membership"
              }
            }
          },
          "404" : {
            "description" : "User or Memberships not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/user/{uid}/config" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Get configs of assemblies or wgs to which the user belongs",
        "description" : "",
        "operationId" : "userConfigs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of memberships to read",
          "required" : false,
          "type" : "string",
          "default" : "ASSEMBLY",
          "enum" : [ "assembly", "group" ]
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Config"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/{id}" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Read a membership record by its ID",
        "description" : "",
        "operationId" : "readMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Membership ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Delete a MEMBERSHIP",
        "description" : "Only for COORDINATORS and the User of the membership",
        "operationId" : "deleteMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Membership ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/{id}/role" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Read roles assigned to a specific membership record by its ID",
        "description" : "",
        "operationId" : "readMembershipRoles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Membership ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SecurityRole"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Add a role to a membership identified by its ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "addMembershipRole",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Membership ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          }
        }
      }
    },
    "/api/membership/{id}/role/{rid}" : {
      "delete" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Delete a role from a membership identified by its ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "deleteMembershipRole",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Membership ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "rid",
          "in" : "path",
          "description" : "Role ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/{id}/verify/{token}" : {
      "get" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Verify a MEMBERSHIP",
        "description" : "Only for COORDINATORS and the User of the membership",
        "operationId" : "verifyMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Membership ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "token",
          "in" : "path",
          "description" : "Membership invitation token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/membership/{id}/{status}" : {
      "put" : {
        "tags" : [ "04 membership: Membership management (for assemblies and working groups)" ],
        "summary" : "Update status of a MEMBERSHIP",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateMembershipStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Membership ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "New Membership Status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Membership"
            }
          }
        }
      }
    },
    "/api/notification/events/{type}" : {
      "post" : {
        "tags" : [ "06 notification: Notifications management" ],
        "operationId" : "createResourceSpaceEvents",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/notification/inbox/{sid}" : {
      "get" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Get space notifications inbox",
        "description" : "Get space notifications inbox",
        "operationId" : "spaceInbox",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of elements per page",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int32"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UpdateTransfer"
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/notification/subscription" : {
      "get" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "List notification events to which the user is subscribed",
        "description" : "",
        "operationId" : "subscriptions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NotificationSubscriptionTransfer"
              }
            }
          },
          "500" : {
            "description" : "Errors in the server",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Subscribe to receive notifications for eventName on origin",
        "description" : "",
        "operationId" : "subscribe",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Subscription Object",
          "description" : "Body of Subscription in JSON. Only origin and eventName needed",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Subscription"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/notification/subscription/{origin}/{eventName}" : {
      "delete" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Unsubscribe to stop receiving notifications for eventName on origin",
        "description" : "",
        "operationId" : "unsubscribe",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "origin",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/notification/subscription/{sid}" : {
      "get" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Subscribe to receive notifications for events in resource space",
        "description" : "",
        "operationId" : "subscribeToResourceSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Unsubscribe to receive notifications for events in resource space",
        "description" : "",
        "operationId" : "unsubscribeToResourceSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/notification/user/{uuid}" : {
      "get" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Update user information",
        "description" : "Updates user information",
        "operationId" : "userInbox",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "User's UUID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UpdateTransfer"
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/assembly/listed" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get list of assemblies based on query",
        "description" : "",
        "operationId" : "findAssembliesPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Search query string (keywords in title)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Special filters. 'summary' returns only summarized info of assemblies, 'featured' returns a list of marks featured assemblies and 'nearby' limits the query to assemblies that are nearby of the user location, ",
          "required" : false,
          "type" : "string",
          "enum" : [ "featured", "nearby", "summary", "random" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AssemblySummaryTransfer"
              }
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/assembly/name/{shortname}" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Read Assembly by Shortname",
        "description" : "Only for MEMBERS of the assembly",
        "operationId" : "findAssemblyByShortname",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shortname",
          "in" : "path",
          "description" : "Assembly Shortname",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Assembly"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/assembly/{aid}/group/{gid}" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Get working group profile if it is listed",
        "description" : "",
        "operationId" : "getListedWorkingGroupProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "Working Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroupSummaryTransfer"
            }
          },
          "404" : {
            "description" : "No group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/assembly/{uuid}" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Read Assembly by its Universal ID",
        "description" : "",
        "operationId" : "findAssemblyByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Assembly UUID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Assembly"
            }
          },
          "404" : {
            "description" : "No assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/assembly/{uuid}/campaign" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Given an Assembly Universal ID (uuid), return its campaigns",
        "description" : "Only for MEMBERS of the assembly",
        "operationId" : "findCampaignsByAssemblyUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Assembly's Universal ID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter campaign by status (ongoing, past, upcoming, all)",
          "required" : false,
          "type" : "string",
          "default" : "ongoing",
          "enum" : [ "ongoing", "past", "future", "all" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Campaign"
              }
            }
          },
          "404" : {
            "description" : "Campaigns not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/assembly/{uuid}/contribution" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create anonymous contribution in Assembly",
        "description" : "",
        "operationId" : "createAnonymousContributionOnAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Universal ID of the target contribution",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Contribution Object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "500" : {
            "description" : "Status not valid",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/assembly/{uuid}/profile" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Read the profile of an Assembly",
        "description" : "",
        "operationId" : "getAssemblyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Universal ID of Assembly",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AssemblyProfile"
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Update the profile of the Assembly",
        "description" : "",
        "operationId" : "updateProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Universal ID of the Assembly",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "AssemblyProfile object",
          "description" : "Body of AssemblyProfile in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssemblyProfile"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AssemblyProfile"
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/assembly/{uuid}/theme" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get themes of an assembly by its UUID",
        "description" : "",
        "operationId" : "getAssemblyThemes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Universal ID of Assembly",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Theme"
              }
            }
          },
          "400" : {
            "description" : "Errors in the form",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/ballot/{uuid}/campaign" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Read campaign by voting ballot Universal ID",
        "description" : "",
        "operationId" : "findCampaignsByBallot",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Ballot Universal ID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CampaignSummaryTransfer"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{cuuid}/contribution/{uuid}/feedback" : {
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Update Feedback on a Contribution",
        "description" : "Feedback on a contribution is a summary of its ups/downs/favs (TBD if this endpoint will remain)",
        "operationId" : "updateContributionFeedbackNonMemberAuthor",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cuuid",
          "in" : "path",
          "description" : "Campaign UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Contribution UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Contribution Feedback object",
          "description" : "Body of Contribution Feedback in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContributionFeedback"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContributionFeedback"
              }
            }
          },
          "400" : {
            "description" : "Contribution feedback form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{uuid}" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Read campaign by Universal ID",
        "description" : "",
        "operationId" : "findCampaignByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Campaign Universal ID (UUID)",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{uuid}/brief" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Public endpoint for reading campaign's html/svg brief",
        "description" : "",
        "operationId" : "getCampaignBrief",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Campaign UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CampaignBriefTransfer"
            }
          },
          "404" : {
            "description" : "No Brief Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{uuid}/components" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's components",
        "description" : "Public View",
        "operationId" : "listPublicCampaignComponents",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Campaign UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Component"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{uuid}/contribution" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create an anonymous contribution in a campaign",
        "description" : "",
        "operationId" : "createAnonymousContributionOnCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Universal ID of the target campaign",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Contribution Object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "500" : {
            "description" : "Status not valid",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{uuid}/groups" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's working groups",
        "description" : "Public view",
        "operationId" : "listPublicCampaignGroups",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Campaign UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkingGroup"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{uuid}/resources" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's resources",
        "description" : "Public View",
        "operationId" : "listPublicCampaignResources",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Campaign UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Resource"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{uuid}/themes" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's themes",
        "description" : "Public View",
        "operationId" : "listPublicCampaignThemes",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Campaign UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Theme"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/campaign/{uuid}/timeline" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists campaign's timeline",
        "description" : "Public view",
        "operationId" : "listPublicCampaignTimeline",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Campaign UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Integer",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CampaignTimelineEdge"
              }
            }
          },
          "404" : {
            "description" : "No campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/contribution/{couuid}/feedback" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get Contribution Feedbacks",
        "description" : "",
        "operationId" : "readContributionFeedbackPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "couuid",
          "in" : "path",
          "description" : "Contribution UUID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type",
          "required" : false,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContributionFeedback"
              }
            }
          },
          "404" : {
            "description" : "No contribution feedbacks found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/contribution/{uuid}" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contribution by its Universal ID",
        "description" : "",
        "operationId" : "findContributionByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Contribution Universal ID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/contribution/{uuid}/contribution" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create an anonymous contribution within another contribution",
        "description" : "",
        "operationId" : "createAnonymousContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Universal ID of the target contribution",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Contribution Object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "500" : {
            "description" : "Error creating contribution",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/contribution/{uuid}/history" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contribution histories by its Universal ID",
        "description" : "",
        "operationId" : "findContributionHistoryByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Contribution Universal ID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContributionHistory"
              }
            }
          },
          "404" : {
            "description" : "No contribution histories found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/group/{uuid}" : {
      "get" : {
        "tags" : [ "02 group: Working Group Management" ],
        "summary" : "Read working group by Universal ID",
        "description" : "",
        "operationId" : "findWorkingGroupByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Working Group Universal ID (UUID)",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroup"
            }
          },
          "404" : {
            "description" : "No working group found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/group/{uuid}/contribution" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create an anonymous contribution in a working group",
        "description" : "",
        "operationId" : "createAnonymousContributionOnWorkingGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Universal ID of the target working group",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Contribution Object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "500" : {
            "description" : "Status not valid",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{suuid}/contribution/{cuuid}" : {
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a Contribution description by its UUID and the space UUID",
        "description" : "",
        "operationId" : "updateSpaceContributionPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "suuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "cuuid",
          "in" : "path",
          "description" : "Contribution UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Contribution in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "404" : {
            "description" : "No Contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Contribution by UUID from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceContributionPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "suuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "cuuid",
          "in" : "path",
          "description" : "Contribution UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No Contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Simple search of resource space",
        "description" : "",
        "operationId" : "getPublicSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/analytics" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Basic analytics of entities in a resource space",
        "description" : "",
        "operationId" : "getAnalytics",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "includeThemes",
          "in" : "query",
          "description" : "Include analytics of contributions per theme",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "false", "true" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ObjectNode"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/assembly" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of assemblies in a resource space",
        "description" : "",
        "operationId" : "findSpaceAssemblyPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Assembly"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/ballot" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of ballots in a resource space",
        "description" : "",
        "operationId" : "findSpaceBallotPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of ballots",
          "required" : false,
          "type" : "string",
          "enum" : [ "active", "archived" ]
        }, {
          "name" : "starts_at",
          "in" : "query",
          "description" : "String Date with format ddMMyyyy",
          "required" : false,
          "type" : "string",
          "default" : "\"\" "
        }, {
          "name" : "ends_at",
          "in" : "query",
          "description" : "String Date with format ddMMyyyy",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Ballot"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/campaign" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of campaigns in a resource space",
        "description" : "",
        "operationId" : "findSpaceCampaignPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Campaign"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/commentcount" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Number of CONTRIBUTIONS of type COMMENT in a resource space",
        "description" : "",
        "operationId" : "getCommentCountPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ObjectNode"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/component" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of components in a resource space",
        "description" : "",
        "operationId" : "findSpaceComponentPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Component"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/config" : {
      "get" : {
        "tags" : [ "10 configuration: configuration management" ],
        "summary" : "Get configs in a Resource Space",
        "description" : "",
        "operationId" : "findSpaceConfigsPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "number"
                }
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/contribution" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contribution by its Universal Resource Space ID",
        "description" : "",
        "operationId" : "findResourceSpaceContributionsByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Resource Space Universal ID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "enum" : [ "forum_post", "comment", "idea", "question", "issue", "proposal", "note" ]
        }, {
          "name" : "by_text",
          "in" : "query",
          "description" : "String",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "groups",
          "in" : "query",
          "description" : "List",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi",
          "default" : "null"
        }, {
          "name" : "themes",
          "in" : "query",
          "description" : "List",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi",
          "default" : "null"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of elements per page",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "sorting",
          "in" : "query",
          "description" : "Ordering of proposals",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "random",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of Contributions",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create an anonymous contribution in a campaign",
        "description" : "",
        "operationId" : "createAnonymousContributionInSpacePublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Universal ID of the target campaign",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Contribution Object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "500" : {
            "description" : "Status not valid",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/contribution/pinned" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contribution by its Universal Resource Space ID",
        "description" : "",
        "operationId" : "findResourceSpacePinnedContributionsByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Resource Space Universal ID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "enum" : [ "forum_post", "comment", "idea", "question", "issue", "proposal", "note" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/field" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of custom field definition in a resource space",
        "description" : "",
        "operationId" : "findSpaceFieldsByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldDefinition"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/field/{fid}/value/{etype}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "CustomFieldValue containing the given word",
        "description" : "",
        "operationId" : "searchCustomFieldsByValueByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Resource Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "fid",
          "in" : "path",
          "description" : "Custom Field Definition ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "etype",
          "in" : "path",
          "description" : "Entity Target Type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Text to be search in the value of custom field values",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldValue"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/fieldvalue" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of custom field value in a resource space",
        "description" : "",
        "operationId" : "findSpaceFieldsValuePublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldValue"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Create a custom field value in a resource space",
        "description" : "",
        "operationId" : "createSpaceFieldsValueByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "CustomFieldValue object",
          "description" : "Body of CustomFieldValue in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldValue"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldValue"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/fieldvalues" : {
      "post" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Create a list of custom field values in a resource space",
        "description" : "",
        "operationId" : "createSpaceFieldValuesByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "List of CustomFieldValue objects within a ResourceSpace",
          "description" : "Body of ResourceSpace with CustomFieldValues in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResourceSpace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldValue"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/group" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of groups in a resource space",
        "description" : "",
        "operationId" : "findSpaceGroupPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkingGroup"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/milestone" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of milestones in a resource space",
        "description" : "",
        "operationId" : "findSpaceMilestonePublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ComponentMilestone"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/organization" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get organizations in a resource space by the UUID of the space",
        "description" : "",
        "operationId" : "findOrganizationsInSpaceByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Resource Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Organization"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/resource" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists resource space's resources",
        "description" : "",
        "operationId" : "listSpaceResourcesbyUuid",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "ResourceSpace UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Resource"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Add a resource  to resource space",
        "description" : "",
        "operationId" : "addSpaceResourcesbyUuid",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "ResourceSpace UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/public/space/{uuid}/theme" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of themes in a resource space",
        "description" : "",
        "operationId" : "findSpaceThemePublic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Space UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Theme"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Simple search of resource space",
        "description" : "",
        "operationId" : "getSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          }
        }
      }
    },
    "/api/space/{sid}/assembly" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Lists resource space's assemblies",
        "description" : "",
        "operationId" : "listSpaceAssembly",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Assembly"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/assembly/{aid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Assembly in a resource space",
        "description" : "",
        "operationId" : "listSpaceAssemblyById",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Assembly"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a Assembly by its ID and the space ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateSpaceAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Assembly object",
          "description" : "Assembly in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assembly"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Assembly"
            }
          },
          "404" : {
            "description" : "No Assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Assembly from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceAssembly",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "aid",
          "in" : "path",
          "description" : "Assembly ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Assembly"
              }
            }
          },
          "404" : {
            "description" : "No Assembly found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/authors" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Export non-member-authors connected to contributions of a campaign, with all their custom fields to a CSV file",
        "description" : "",
        "operationId" : "exportNonMemberAuthors",
        "produces" : [ "application/csv" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Export format",
          "required" : false,
          "type" : "string",
          "enum" : [ "CSV" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "No space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/ballot" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of ballots in a resource space",
        "description" : "",
        "operationId" : "findSpaceBallot",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of ballots",
          "required" : false,
          "type" : "string",
          "enum" : [ "active", "archived" ]
        }, {
          "name" : "starts_at",
          "in" : "query",
          "description" : "String Date with format ddMMyyyy",
          "required" : false,
          "type" : "string",
          "default" : "\"\" "
        }, {
          "name" : "ends_at",
          "in" : "query",
          "description" : "String Date with format ddMMyyyy",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Ballot"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Create a ballot in a resource space",
        "description" : "",
        "operationId" : "createSpaceBallot",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "BallotTransfer object",
          "description" : "Body of BallotTransfer in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BallotTransfer"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Ballot"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a ballot in a resource space",
        "description" : "",
        "operationId" : "updateSpaceBallot",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Ballot object",
          "description" : "Body of Ballot in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Ballot"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Ballot"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/ballot/{bid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Ballot by id in a resource space",
        "description" : "",
        "operationId" : "findSpaceBallotById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bid",
          "in" : "path",
          "description" : "Ballot ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Ballot"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Ballot from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceBallot",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bid",
          "in" : "path",
          "description" : "Ballot ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Ballot"
              }
            }
          },
          "404" : {
            "description" : "No Ballot found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/campaign" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Lists resource space's Campaigns",
        "description" : "",
        "operationId" : "listSpaceCampaign",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Campaign"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/campaign/{cid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Campaign in a resource space",
        "description" : "",
        "operationId" : "listSpaceCampaignById",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a Campaign by its ID and the space ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateSpaceCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Campaign object",
          "description" : "Campaign in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Campaign"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Campaign"
            }
          },
          "404" : {
            "description" : "No Campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Campaign from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceCampaign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Campaign ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Campaign"
              }
            }
          },
          "404" : {
            "description" : "No Campaign found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/commentcount" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Comment count of a resource space",
        "description" : "",
        "operationId" : "getCommentCount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ObjectNode"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/component" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Lists resource space's components",
        "description" : "",
        "operationId" : "listSpaceComponent",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Component"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/component/{cid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Component in a resource space",
        "description" : "",
        "operationId" : "listSpaceComponentById",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Component ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Component"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a Component description by its ID and the space ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateSpaceCampaignComponent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Component ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Component object",
          "description" : "Component in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Component"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Component"
            }
          },
          "404" : {
            "description" : "No Component found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Component from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceComponent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Component ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Component"
              }
            }
          },
          "404" : {
            "description" : "No Component found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/config" : {
      "get" : {
        "tags" : [ "10 configuration: configuration management" ],
        "summary" : "Get configs in a Resource Space",
        "description" : "",
        "operationId" : "findSpaceConfigs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "number"
                }
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "10 configuration: configuration management" ],
        "summary" : "Add configuration to the resource space",
        "description" : "",
        "operationId" : "createSpaceConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "config_map",
          "description" : "configuration key value json map",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "10 configuration: configuration management" ],
        "summary" : "Update configs in a Resource Space",
        "description" : "",
        "operationId" : "updateSpaceConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "config_map",
          "description" : "configuration key value json map",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/config/{uuid}" : {
      "get" : {
        "tags" : [ "10 configuration: configuration management" ],
        "summary" : "Get config by id in a Resource Space",
        "description" : "",
        "operationId" : "findSpaceConfigById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Config"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a config description by its ID and the space ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateSpaceCampaignConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Config UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Config object",
          "description" : "Config in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Config"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Config"
            }
          },
          "404" : {
            "description" : "No config found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Config from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Config UUID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Config"
              }
            }
          },
          "404" : {
            "description" : "No Config found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/contribution" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions in a specific Resource Space",
        "description" : "Every entity in AppCivist has a Resource Space to associate itself to other entities",
        "operationId" : "findResourceSpaceContributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "enum" : [ "forum_post", "comment", "idea", "question", "issue", "proposal", "note" ]
        }, {
          "name" : "by_text",
          "in" : "query",
          "description" : "String",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "groups",
          "in" : "query",
          "description" : "List",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi",
          "default" : "null"
        }, {
          "name" : "themes",
          "in" : "query",
          "description" : "List",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi",
          "default" : "null"
        }, {
          "name" : "all",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "by_author",
          "in" : "query",
          "description" : "Author ID",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of elements per page",
          "required" : false,
          "type" : "integer",
          "default" : "null",
          "format" : "int32"
        }, {
          "name" : "sorting",
          "in" : "query",
          "description" : "Ordering of proposals",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "random",
          "in" : "query",
          "description" : "Boolean",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "String",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Create a contribution in a specific Resource Space",
        "description" : "",
        "operationId" : "createContributionInResourceSpaceWithId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Body of Contribution in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ASSEMBLY_ID",
          "in" : "header",
          "description" : "The real author of the post",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_SOURCE",
          "in" : "header",
          "description" : "Indicates the name of the providerId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_SOURCE_URL",
          "in" : "header",
          "description" : "Source to the original post",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_USER_SOURCE_ID",
          "in" : "header",
          "description" : "Email or id of the user in the source social network",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_USER_SOURCE_URL",
          "in" : "header",
          "description" : "Link to the user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SOCIAL_IDEATION_USER_NAME",
          "in" : "header",
          "description" : "User name in source",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "IGNORE_ADMIN_USER",
          "in" : "header",
          "description" : "Boolean that indicates if AppCivist should or should not consider the ADMIN user as author",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "400" : {
            "description" : "Contribution form has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/contribution/comment/reset" : {
      "put" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Update comment counts on contributions",
        "description" : "Only for ADMINS",
        "operationId" : "updateContributionCounters",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "500" : {
            "description" : "Status not valid",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/contribution/pinned" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contributions in a specific Resource Space",
        "description" : "Every entity in AppCivist has a Resource Space to associate itself to other entities",
        "operationId" : "findResourceSpacePinnedContributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "enum" : [ "forum_post", "comment", "idea", "question", "issue", "proposal", "note" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No contributions found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/contribution/search" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Contribution containing the given word",
        "description" : "",
        "operationId" : "searchContributionsByText",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "byText",
          "in" : "query",
          "description" : "Text to be search in the title or text of contributions",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/contribution/words/frecuency" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "List of words in proposals or ideas from a given resource space with its frequency",
        "description" : "",
        "operationId" : "wordsFrecuency",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "number"
                }
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/contribution/{cid}" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Get contribution by id in a specific Resource Space",
        "description" : "Every entity in AppCivist has a Resource Space to associate itself to other entities",
        "operationId" : "findResourceSpaceContributionById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a Contribution description by its ID and the space ID",
        "description" : "Only for Members",
        "operationId" : "updateSpaceContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Contribution object",
          "description" : "Contribution in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contribution"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Contribution"
            }
          },
          "404" : {
            "description" : "No Contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Contribution from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceContribution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contribution"
              }
            }
          },
          "404" : {
            "description" : "No Contribution found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/export/contribution" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Export proposal list from a resource space to a CSV/RTF/PDF file",
        "description" : "",
        "operationId" : "exportSpaceContributionProposal",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Export format",
          "required" : false,
          "type" : "string",
          "enum" : [ "PDF", "RTF", "CSV" ]
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Contribution fields to include",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/export/contribution/{cid}" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Export proposal to a CSV/RTF/PDF file",
        "description" : "",
        "operationId" : "exportContributionProposal",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "Contribution id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Export format",
          "required" : false,
          "type" : "string",
          "enum" : [ "PDF", "RTF", "CSV" ]
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Contribution fields to include",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "No proposal found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/field" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of custom field definition in a resource space",
        "description" : "",
        "operationId" : "findSpaceFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldDefinition"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Create a custom field definition in a resource space",
        "description" : "",
        "operationId" : "createSpaceFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "CustomFieldDefinition object",
          "description" : "Body of CustomFieldDefinition in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldDefinition"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldDefinition"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/field/{cfid}" : {
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a custom field definition in a resource space",
        "description" : "",
        "operationId" : "updateSpaceFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cfid",
          "in" : "path",
          "description" : "Custom field definition ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "CustomFieldDefinition object",
          "description" : "Body of CustomFieldDefinition in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldDefinition"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldDefinition"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a custom field definition from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cfid",
          "in" : "path",
          "description" : "Custom field definition ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldDefinition"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/field/{fid}/value/{etype}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "CustomFieldValue containing the given word",
        "description" : "",
        "operationId" : "searchCustomFieldsByValue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fid",
          "in" : "path",
          "description" : "Custom Field Definition ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "etype",
          "in" : "path",
          "description" : "Entity Target Type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Text to be search in the value of custom field values",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldValue"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/fieldvalue" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "List of custom field value in a resource space",
        "description" : "",
        "operationId" : "findSpaceFieldsValue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldValue"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Create a custom field value in a resource space",
        "description" : "",
        "operationId" : "createSpaceFieldsValue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "CustomFieldValue object",
          "description" : "Body of CustomFieldValue in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldValue"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldValue"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/fieldvalue/{cfid}" : {
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a custom field value in a resource space",
        "description" : "",
        "operationId" : "updateSpaceFieldsValue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cfid",
          "in" : "path",
          "description" : "Custom field value ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "CustomFieldValue object",
          "description" : "Body of CustomFieldValue in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldValue"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldValue"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a custom field value from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceFieldsValue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cfid",
          "in" : "path",
          "description" : "Custom field value ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldValue"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/fieldvalues" : {
      "post" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Create a list of custom field values in a resource space",
        "description" : "",
        "operationId" : "createSpaceFieldValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "List of CustomFieldValue objects within a ResourceSpace",
          "description" : "Body of ResourceSpace with CustomFieldValues in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResourceSpace"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldValue"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a list of custom field values in a resource space",
        "description" : "",
        "operationId" : "updateSpaceFieldValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "List of CustomFieldValue objects within a ResourceSpace",
          "description" : "Body of ResourceSpace with CustomFieldValues in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResourceSpace"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldValue"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/group" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Lists resource space's groups",
        "description" : "",
        "operationId" : "listSpaceGroup",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "is_topic",
          "in" : "query",
          "description" : "Filter by topic default true",
          "required" : false,
          "type" : "string",
          "default" : "true"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkingGroup"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/group/{gid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "WorkingGroup in a resource space",
        "description" : "",
        "operationId" : "listSpaceGroupById",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "WorkingGroup ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroup"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a Working Group by its ID and the space ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateSpaceGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "WorkingGroup ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "WorkingGroup object",
          "description" : "WorkingGroup in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkingGroup"
            }
          },
          "404" : {
            "description" : "No WorkingGroup found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a WorkingGroup from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "gid",
          "in" : "path",
          "description" : "WorkingGroup ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkingGroup"
              }
            }
          },
          "404" : {
            "description" : "No WorkingGroup found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/insights/themes" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Get themes stats in a specific Resource Space",
        "description" : "",
        "operationId" : "exportSpaceThemeStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "String",
          "required" : false,
          "type" : "string",
          "enum" : [ "OFFICIAL_PRE_DEFINED", "EMERGENT", "ALL" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Theme"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/milestone" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Lists resource space's component milestones",
        "description" : "",
        "operationId" : "listSpaceMilestone",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ComponentMilestone"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/milestone/{mid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Component Milestone in a resource space",
        "description" : "",
        "operationId" : "listSpaceMilestoneById",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "mid",
          "in" : "path",
          "description" : "Component Milestone ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ComponentMilestone"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a ComponentMilestone description by its ID and the space ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateSpaceComponentMilestone",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "mid",
          "in" : "path",
          "description" : "ComponentMilestone ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "ComponentMilestone object",
          "description" : "ComponentMilestone in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ComponentMilestone"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ComponentMilestone"
            }
          },
          "404" : {
            "description" : "No ComponentMilestone found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Component Milestone from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceMilestone",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "mid",
          "in" : "path",
          "description" : "Component Milestone ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ComponentMilestone"
              }
            }
          },
          "404" : {
            "description" : "No Component Milestone found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/organization" : {
      "get" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Get organizations in a resource space",
        "description" : "",
        "operationId" : "findOrganizationsInSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Organization"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Update organizations in a resource space",
        "description" : "",
        "operationId" : "updateOrganizationsInSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Organization object",
          "description" : "Body of Organization in JSON",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Organization"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/organization/{id}" : {
      "delete" : {
        "tags" : [ "01 assembly: Assembly Making" ],
        "summary" : "Delete a organization from resource space",
        "description" : "",
        "operationId" : "deleteOrganizationFromSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/resource" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Lists resource space's resources",
        "description" : "",
        "operationId" : "listSpaceResources",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Resource"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Add a resource  to resource space",
        "description" : "",
        "operationId" : "addSpaceResources",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Resource Object",
          "description" : "The new Resource in JSON",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/resource/{rid}" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Resource in a resource space",
        "description" : "",
        "operationId" : "listSpaceResourcesById",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "rid",
          "in" : "path",
          "description" : "Resource ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a Resource by its ID and the space ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateSpaceResource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "rid",
          "in" : "path",
          "description" : "Resource ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Resource object",
          "description" : "Resource in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Resource"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "No Resource found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Resource from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceResource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "rid",
          "in" : "path",
          "description" : "Resource ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Resource"
              }
            }
          },
          "404" : {
            "description" : "No Resource found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/space/{new_sid}" : {
      "post" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "Assign a resouce space to other resource space",
        "description" : "",
        "operationId" : "assignResourceSpaceToResourceSpace",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "new_sid",
          "in" : "path",
          "description" : "New Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/theme" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Lists resource space's themes",
        "description" : "",
        "operationId" : "listSpaceTheme",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Theme"
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/theme/{tid}" : {
      "get" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Theme in a resource space",
        "description" : "",
        "operationId" : "listSpaceThemeById",
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "ResourceSpace ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "tid",
          "in" : "path",
          "description" : "Theme ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Theme"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Update a Theme by its ID and the space ID",
        "description" : "Only for COORDINATORS",
        "operationId" : "updateSpaceTheme",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "tid",
          "in" : "path",
          "description" : "Theme ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "Theme object",
          "description" : "Theme in json",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Theme"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Theme"
            }
          },
          "404" : {
            "description" : "No Theme found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "09 space: resource space management" ],
        "summary" : "Delete a Theme from a resource space",
        "description" : "",
        "operationId" : "deleteSpaceTheme",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "tid",
          "in" : "path",
          "description" : "Theme ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Theme"
              }
            }
          },
          "404" : {
            "description" : "No Theme found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/space/{sid}/words" : {
      "get" : {
        "tags" : [ "05 contribution: Contribution Making" ],
        "summary" : "List of words in contributions from a given resource space with its frequency",
        "description" : "",
        "operationId" : "wordsFrecuencyByType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of contributions",
          "required" : false,
          "type" : "string",
          "enum" : [ "PROPOSAL", "IDEA", "DISCUSSION", "PROPOSAL_AND_IDEAS", "ALL" ]
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "number"
                }
              }
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/template/assembly/default" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Get list of default templates",
        "description" : "Get list of default templates",
        "operationId" : "findAssemblyTemplatesDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Component"
            }
          },
          "404" : {
            "description" : "No Default Template Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/template/campaign/default" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Get list of default templates",
        "description" : "Get list of default templates",
        "operationId" : "findCampaignTemplatesDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Component"
            }
          },
          "404" : {
            "description" : "No Default Template Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/template/group/default" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Get list of default templates",
        "description" : "Get list of default templates",
        "operationId" : "findGroupTemplatesDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Component"
            }
          },
          "404" : {
            "description" : "No Default Template Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/upload" : {
      "post" : {
        "tags" : [ "07 files: Upload files" ],
        "summary" : "Upload a file and get its URL",
        "description" : "",
        "operationId" : "upload",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "file",
          "description" : "File to upload",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/S3File"
            }
          },
          "400" : {
            "description" : "File upload error",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/upload/data" : {
      "post" : {
        "tags" : [ "07 files: Upload files" ],
        "summary" : "Upload YML data",
        "description" : "",
        "operationId" : "uploadData",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "description" : "File with Data to Upload",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/S3File"
            }
          },
          "400" : {
            "description" : "File upload error",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Get list of users",
        "description" : "Get the full list of users. Only available to ADMINS",
        "operationId" : "getUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's auth key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "400" : {
            "description" : "Request has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/account" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "askLink",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "doLink",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/authenticate/{provider}/denied" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "oAuthDenied",
        "parameters" : [ {
          "name" : "provider",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/exists" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "exists",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/link" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Returns a form to link external auth provider accounts",
        "description" : "",
        "operationId" : "link",
        "produces" : [ "text/html" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          }
        }
      }
    },
    "/api/user/login" : {
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Creates a new session key for the requesting user, if the system authenticates him/her.",
        "description" : "",
        "operationId" : "login",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "login_form",
          "description" : "User's Login Credentials",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MyLogin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Request has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/login/denied" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "onLoginUserNotFound",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/logout" : {
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Expires the session key of the requesting user",
        "description" : "",
        "operationId" : "logout",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "user_body",
          "description" : "Logout body must be empty JSON",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/user/logout/redirect" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "redirectAfterLogout",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/merge" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "askMerge",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "doMerge",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/password/change" : {
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Changes user's password",
        "description" : "",
        "operationId" : "doChangePassword",
        "produces" : [ "application/html" ],
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Password Change Object",
          "description" : "User's updated password form",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PasswordChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          }
        }
      }
    },
    "/api/user/password/forgot" : {
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Request a token to change forgot password",
        "description" : "",
        "operationId" : "doForgotPassword",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/api/user/password/forgot/change" : {
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Changes user's password",
        "description" : "",
        "operationId" : "doChangeForgotPassword",
        "produces" : [ "application/html" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Password Forgot Change Object",
          "description" : "User's updated password form",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PasswordForgotChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          }
        }
      }
    },
    "/api/user/password/reset" : {
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "doResetPassword",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/password/reset/{token}" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "resetPassword",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/signup" : {
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Creates a new unverified user with an email and a password. Sends a verification email.",
        "description" : "",
        "operationId" : "signup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "signup_form",
          "description" : "User's signup form",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MySignup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Request has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/unverified" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "operationId" : "unverified",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    },
    "/api/user/verify" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Gets page for email verification",
        "description" : "",
        "operationId" : "verifyEmail",
        "parameters" : [ {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/verify/{token}" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Verify invitation token",
        "description" : "",
        "operationId" : "verify",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "path",
          "description" : "Verification token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "400" : {
            "description" : "Error in Request",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{aid}/config/" : {
      "get" : {
        "tags" : [ "10 configuration: configuration management" ],
        "summary" : "Get user configs",
        "description" : "",
        "operationId" : "getUserConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "config_map",
          "description" : "configuration key value json map",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "10 configuration: configuration management" ],
        "summary" : "Update user configs",
        "description" : "",
        "operationId" : "updateUserConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Resource Space id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "config_map",
          "description" : "configuration key value json map",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "No resource space found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{id}/notifications" : {
      "get" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Get notifications by user",
        "description" : "Get notifications by user",
        "operationId" : "getNotificationSignals",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UpdateTransfer"
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{id}/notifications/read" : {
      "put" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Update user notifications",
        "description" : "Update user notifications",
        "operationId" : "updateNotifications",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AppCivistBaseModel"
              }
            }
          },
          "404" : {
            "description" : "Notification not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{id}/notifications/stats" : {
      "get" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Get notifications stats by user",
        "description" : "Get notifications stats by user",
        "operationId" : "getNotificationSignalsStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UpdateTransfer"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{id}/notifications/{nid}/read" : {
      "put" : {
        "tags" : [ "06 notification: Notifications management" ],
        "summary" : "Update user notification",
        "description" : "Update user notification",
        "operationId" : "updateNotification",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "nid",
          "in" : "path",
          "description" : " ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AppCivistBaseModel"
            }
          },
          "404" : {
            "description" : "Notification not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{uid}" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Get a user by id",
        "description" : "Get a user by id. Only available to ADMINS",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's auth key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Update user information",
        "description" : "Updates user information",
        "operationId" : "updateUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User's updated information",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Soft delete of an user",
        "description" : "Soft delete of an user by simply deactivating it",
        "operationId" : "deleteUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{uid}/campaign" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Given a users local ID (uid), returns an array of campaigns that are organized by that user's assemblies",
        "description" : "Only for SELF",
        "operationId" : "campaignsByUserId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter campaign by status (ongoing, past, upcoming, all)",
          "required" : false,
          "type" : "string",
          "default" : "ongoing",
          "enum" : [ "ongoing", "past", "future", "all" ]
        }, {
          "name" : "assembly",
          "in" : "query",
          "description" : "Assembly ID",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Campaign"
              }
            }
          },
          "404" : {
            "description" : "No Campaign Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{uid}/fbtoken" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "check if user has a Facebook access token",
        "description" : " user with id :id",
        "operationId" : "checkFbToken",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's auth key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LinkedAccount"
            }
          },
          "404" : {
            "description" : "Facebook Token not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Stores a new facebook access token for user",
        "description" : " user with id :id",
        "operationId" : "createFbToken",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's auth key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "userId",
          "description" : "Facebook user's id",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "accessToken",
          "description" : "New access token from facebook",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "expiration",
          "description" : "Expiration (in seconds) of the token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "auuid",
          "description" : "UUID of the assembly which",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LinkedAccount"
            }
          },
          "400" : {
            "description" : "Request has errors",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Update user's facebook access token",
        "description" : " user with id :id",
        "operationId" : "updateFbToken",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's auth key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "userId",
          "description" : "Facebook user's id",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "accessToken",
          "description" : "New access token from facebook",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "expiration",
          "description" : "Expiration (in seconds) of the token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "auuid",
          "description" : "UUID of the assembly which",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LinkedAccount"
            }
          },
          "404" : {
            "description" : "Linked Account not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{uid}/force" : {
      "delete" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Delete a user",
        "description" : "Delete a user, but not his/her contributions",
        "operationId" : "deleteUserForce",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{uid}/loggedin" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Get session user",
        "description" : "Get session user currently loggedin, as available in HTTP session",
        "operationId" : "loggedin",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's auth key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/user/{uid}/profile" : {
      "get" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Get session user's profile",
        "description" : "Get session user currently loggedin, as available in HTTP session",
        "operationId" : "profile",
        "produces" : [ "application/json", "text/html" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's auth key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserProfile"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Create user's profile",
        "description" : "",
        "operationId" : "profile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User's new profile information",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserProfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserProfile"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "00 user: User Management" ],
        "summary" : "Update user's profile information",
        "description" : "Updates user's profile information",
        "operationId" : "profile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "uid",
          "in" : "path",
          "description" : "User's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User's updated profile information",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserProfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/api/user/{uuid}/campaign" : {
      "get" : {
        "tags" : [ "03 campaign: Campaign Management" ],
        "summary" : "Given a users universal ID (uuid), returns an array of campaigns that are organized by that user's assemblies",
        "description" : "Only for SELF",
        "operationId" : "campaignsByUserUuid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "User's Universal ID",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter campaign by status (ongoing, past, upcoming, all)",
          "required" : false,
          "type" : "string",
          "default" : "ongoing",
          "enum" : [ "ongoing", "past", "future", "all" ]
        }, {
          "name" : "assembly",
          "in" : "query",
          "description" : "Assembly UUID",
          "required" : false,
          "type" : "string",
          "default" : "null",
          "format" : "uuid"
        }, {
          "name" : "SESSION_KEY",
          "in" : "header",
          "description" : "User's session authentication key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Campaign"
              }
            }
          },
          "404" : {
            "description" : "No Campaign Found",
            "schema" : {
              "$ref" : "#/definitions/TransferResponseStatus"
            }
          }
        }
      }
    },
    "/{path}" : {
      "options" : {
        "tags" : [ "08: Other" ],
        "operationId" : "checkPreFlight",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            },
            "headers" : { }
          }
        }
      }
    }
  },
  "definitions" : {
    "CustomFieldValue" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "customFieldValueId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "entityTargetType" : {
          "type" : "string"
        },
        "entityTargetUuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "value" : {
          "type" : "string"
        },
        "customFieldDefinition" : {
          "$ref" : "#/definitions/CustomFieldDefinition"
        }
      },
      "description" : "Model reprensenting Custom field value"
    },
    "SecurityRole" : {
      "type" : "object",
      "properties" : {
        "roleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "description" : "Roles assigned to Users"
    },
    "BallotTransfer" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "password" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "string"
        },
        "notes" : {
          "type" : "string"
        },
        "votingSystemType" : {
          "type" : "string",
          "enum" : [ "RANGE", "RANKED", "DISTRIBUTED", "PLURALITY", "CONSENSUS" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "ARCHIVED", "DRAFT" ]
        },
        "requireRegistration" : {
          "type" : "boolean",
          "default" : false
        },
        "userUuidAsSignature" : {
          "type" : "boolean",
          "default" : false
        },
        "decisionType" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string"
        },
        "component" : {
          "$ref" : "#/definitions/Component"
        },
        "startsAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endsAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "ballotCandidates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BallotCandidate"
          }
        },
        "candidateType" : {
          "type" : "string",
          "enum" : [ "EXTERNAL", "ASSEMBLY", "CONTRIBUTION", "CAMPAIGN", "USER", "GROUP" ]
        },
        "ballotConfigs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BallotConfiguration"
          }
        }
      }
    },
    "WorkingGroupTransfer" : {
      "type" : "object"
    },
    "PasswordForgotChange" : {
      "type" : "object",
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "repeatPassword" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        }
      }
    },
    "UpdateTransfer" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "UPCOMING_MILESTONE", "ASSEMBLY_UPDATE", "CAMPAIGN_UPDATE", "WORKING_GROUP_UPDATE", "CONTRIBUTION_UPDATE", "PRIVATE_MESSAGE", "FOLLOWED_ASSEMBLY_UPDATE", "FOLLOWED_CAMPAIGN_UPDATE" ]
        },
        "resourceType" : {
          "type" : "string",
          "enum" : [ "CONTRIBUTION_IDEA", "CONTRIBUTION_QUESTION", "CONTRIBUTION_COMMENT", "CONTRIBUTION_ISSUE", "CONTRIBUTION_FORUM_POST", "CONTRIBUTION_ACTION_ITEM", "CONTRIBUTION_BRAINSTORMING", "CONTRIBUTION_PROPOSAL", "CONTRIBUTION_DISCUSSION", "ELECTION", "BALLOT", "VOTE", "PROPOSAL_TEMPLATE", "EXTERNAL", "ASSEMBLY", "CAMPAIGN", "CAMPAIGN_COMPONENT", "WORKING_GROUP", "PICTURE", "VIDEO", "PAD", "TEXT", "WEBPAGE", "FILE" ]
        },
        "containerType" : {
          "type" : "string",
          "enum" : [ "CONTRIBUTION_IDEA", "CONTRIBUTION_QUESTION", "CONTRIBUTION_COMMENT", "CONTRIBUTION_ISSUE", "CONTRIBUTION_FORUM_POST", "CONTRIBUTION_ACTION_ITEM", "CONTRIBUTION_BRAINSTORMING", "CONTRIBUTION_PROPOSAL", "CONTRIBUTION_DISCUSSION", "ELECTION", "BALLOT", "VOTE", "PROPOSAL_TEMPLATE", "EXTERNAL", "ASSEMBLY", "CAMPAIGN", "CAMPAIGN_COMPONENT", "WORKING_GROUP", "PICTURE", "VIDEO", "PAD", "TEXT", "WEBPAGE", "FILE" ]
        },
        "title" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "resourceSummary" : {
          "type" : "string"
        },
        "resourceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourceUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "containerId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "containerUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lang" : {
          "type" : "string"
        },
        "relativeUrl" : {
          "type" : "string"
        },
        "resource" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "number"
          }
        },
        "container" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "number"
          }
        }
      }
    },
    "ContributionTemplate" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "templateSections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTemplateSection"
          }
        }
      },
      "description" : "Template for a contribution"
    },
    "MembershipInvitation" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "email" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACCEPTED", "REQUESTED", "INVITED", "FOLLOWING", "REJECTED" ]
        },
        "token" : {
          "$ref" : "#/definitions/TokenAction"
        },
        "targetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "targetType" : {
          "type" : "string",
          "enum" : [ "ASSEMBLY", "GROUP" ]
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SecurityRole"
          }
        },
        "targetAssembly" : {
          "$ref" : "#/definitions/Assembly"
        },
        "targetGroup" : {
          "$ref" : "#/definitions/WorkingGroup"
        }
      },
      "description" : "Invitation to become a member of a Working Group or an Assembly"
    },
    "Result" : {
      "type" : "object"
    },
    "LinkedAccount" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "providerUserId" : {
          "type" : "string"
        },
        "providerKey" : {
          "type" : "string"
        }
      },
      "description" : "Connected accounts to users (e.g., google, facebok, etc.)"
    },
    "ContributionTemplateSectionTransfer" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ComponentRequiredConfiguration" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "componentRequiredConfigurationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "componentDef" : {
          "$ref" : "#/definitions/ComponentDefinition"
        },
        "configDef" : {
          "$ref" : "#/definitions/ConfigDefinition"
        }
      },
      "description" : "A configuration required by the definition of component for a campaign"
    },
    "CampaignBriefTransfer" : {
      "type" : "object",
      "properties" : {
        "brief" : {
          "type" : "string"
        },
        "campaignUuid" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "WorkingGroupProfile" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "workingGroupProfileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "workingGroup" : {
          "$ref" : "#/definitions/WorkingGroup"
        },
        "supportedMembership" : {
          "type" : "string",
          "enum" : [ "OPEN", "INVITATION", "REQUEST", "INVITATION_AND_REQUEST" ]
        },
        "managementType" : {
          "type" : "string",
          "enum" : [ "OPEN", "COORDINATED", "MODERATED", "COORDINATED_AND_MODERATED", "DEMOCRATIC" ]
        },
        "icon" : {
          "type" : "string"
        },
        "cover" : {
          "type" : "string"
        },
        "color" : {
          "type" : "string"
        }
      },
      "description" : "Profile of Working Groups"
    },
    "AssemblyProfile" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "assemblyProfileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "assembly" : {
          "$ref" : "#/definitions/Assembly"
        },
        "targetAudience" : {
          "type" : "string"
        },
        "supportedMembership" : {
          "type" : "string",
          "enum" : [ "OPEN", "INVITATION", "REQUEST", "INVITATION_AND_REQUEST" ]
        },
        "managementType" : {
          "type" : "string",
          "enum" : [ "OPEN", "COORDINATED", "MODERATED", "COORDINATED_AND_MODERATED", "DEMOCRATIC" ]
        },
        "icon" : {
          "type" : "string"
        },
        "cover" : {
          "type" : "string"
        },
        "primaryContactName" : {
          "type" : "string"
        },
        "primaryContactPhone" : {
          "type" : "string"
        },
        "primaryContactEmail" : {
          "type" : "string"
        }
      },
      "description" : "The profile of an Assembly"
    },
    "BallotCandidate" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ballotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "candidateType" : {
          "type" : "string",
          "enum" : [ "EXTERNAL", "ASSEMBLY", "CONTRIBUTION", "CAMPAIGN", "USER", "GROUP" ]
        },
        "candidateUuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "candidateUuidAsString" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "removed" : {
          "type" : "boolean",
          "default" : false
        },
        "removedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "contributionSummary" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "The pointer to a candidate in a a ballot paper. Represents a resource in AppCivist through its UUID"
    },
    "Permission" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        }
      }
    },
    "Membership" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "groupId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "assemblyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "email" : {
          "type" : "string",
          "description" : "Email of the person for whom a membership will be created"
        },
        "type" : {
          "type" : "string",
          "description" : "Type identifies what type of membership depending on the target",
          "enum" : [ "ASSEMBLY", "GROUP" ]
        },
        "targetCollection" : {
          "type" : "string",
          "description" : "targetCollection is the the ID of the Assembly or Working Group to which we are associating the user"
        },
        "defaultRoleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "defaultRoleName" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "description" : "status",
          "enum" : [ "REQUESTED", "INVITED", "ACCEPTED or REJECTED" ]
        }
      },
      "description" : "A Membership connects a user to an Assembly or a Working Group, assigning a role that is used for authorization purposes. Only Coordinators have the power to create and update memberships. Members can delete their own memberships."
    },
    "ApiResponseTransfer" : {
      "type" : "object",
      "properties" : {
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          }
        }
      }
    },
    "Subscription" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string"
        },
        "spaceId" : {
          "type" : "string"
        },
        "spaceType" : {
          "type" : "string",
          "enum" : [ "CAMPAIGN", "CONTRIBUTION", "ASSEMBLY", "WORKING_GROUP", "IDEA" ]
        },
        "subscriptionType" : {
          "type" : "string",
          "enum" : [ "REGULAR", "NEWSLETTER" ]
        },
        "newsletterFrecuency" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ignoredEvents" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "boolean"
          }
        },
        "disabledServices" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "boolean"
          }
        },
        "defaultService" : {
          "type" : "integer",
          "format" : "int32"
        },
        "defaultIdentity" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "Subsription for Notifications Support"
    },
    "Assembly" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "assemblyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "shortname" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "listed" : {
          "type" : "boolean",
          "default" : false
        },
        "invitationEmail" : {
          "type" : "string"
        },
        "principalAssembly" : {
          "type" : "boolean",
          "default" : false
        },
        "profile" : {
          "$ref" : "#/definitions/AssemblyProfile"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "creator" : {
          "$ref" : "#/definitions/User"
        },
        "components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Component"
          }
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        },
        "organizations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Organization"
          }
        },
        "workingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        },
        "campaigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Campaign"
          }
        },
        "forumPosts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contribution"
          }
        },
        "forumResourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourcesResourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "forumResourceSpaceUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "resourcesResourceSpaceUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "followedAssemblies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Assembly"
          }
        },
        "followingAssemblies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Assembly"
          }
        },
        "existingComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Component"
          }
        },
        "existingConfigs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "existingThemes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        },
        "existingWorkingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        },
        "existingCampaigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Campaign"
          }
        }
      },
      "description" : "An Assembly is an a space owned by a group of people to organize democratic actions"
    },
    "VotingBallotTransfer" : {
      "type" : "object"
    },
    "ContributionStatisticsTransfer" : {
      "type" : "object"
    },
    "ThemeListTransfer" : {
      "type" : "object",
      "properties" : {
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        }
      }
    },
    "ContributionHistoryItem" : {
      "type" : "object",
      "properties" : {
        "internalChanges" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "externalChanges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionHistoryExternalChange"
          }
        },
        "associationChanges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionHistoryAssociationChange"
          }
        }
      }
    },
    "MySignup" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "repeatPassword" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "lang" : {
          "type" : "string"
        },
        "newAssembly" : {
          "$ref" : "#/definitions/AssemblyTransfer"
        },
        "existingAssembly" : {
          "$ref" : "#/definitions/AssemblyTransfer"
        },
        "invitationToken" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "ComponentTransfer" : {
      "type" : "object",
      "properties" : {
        "componentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeline" : {
          "type" : "integer",
          "format" : "int32"
        },
        "linked" : {
          "type" : "boolean",
          "default" : false
        },
        "milestones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentMilestoneTransfer"
          }
        },
        "contributions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTransfer"
          }
        },
        "ballots" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VotingBallotTransfer"
          }
        },
        "templates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTemplateTransfer"
          }
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigsTransfer"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "IDEAS", "PROPOSALS", "DELIBERATION", "VOTING", "IMPLEMENTATION" ]
        }
      }
    },
    "Log" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "user" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string"
        },
        "resourceType" : {
          "type" : "string"
        },
        "resourceUuid" : {
          "type" : "string"
        },
        "remoteAddress" : {
          "type" : "string"
        },
        "remoteHost" : {
          "type" : "string"
        }
      },
      "description" : "Log record for registering events in the system"
    },
    "Resource" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "resourceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "url" : {
          "type" : "string",
          "format" : "url"
        },
        "urlAsString" : {
          "type" : "string"
        },
        "creator" : {
          "$ref" : "#/definitions/User"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "resourceType" : {
          "type" : "string",
          "enum" : [ "PROPOSAL", "PICTURE", "VIDEO", "PAD", "TEXT", "WEBPAGE", "FILE", "AUDIO", "CONTRIBUTION_TEMPLATE", "GDOC" ]
        },
        "name" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "readOnlyPadId" : {
          "type" : "string"
        },
        "resourceSpaceWithServerConfigs" : {
          "type" : "string",
          "format" : "uuid"
        },
        "confirmed" : {
          "type" : "boolean",
          "default" : false
        },
        "urlLargeString" : {
          "type" : "string"
        },
        "urlMediumString" : {
          "type" : "string"
        },
        "urlThumbnailString" : {
          "type" : "string"
        }
      },
      "description" : "Resource represents external resources, accessible through an URL"
    },
    "UserTransfer" : {
      "type" : "object"
    },
    "ConfigsTransfer" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "CustomFieldDefinition" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "customFieldDefinitionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string",
          "enum" : [ "ASSEMBLY", "CAMPAIGN", "WORKING_GROUP", "COMPONENT", "MILESTONE", "CONTRIBUTION", "CONTRIBUTION_FEEDBACK", "BALLOT", "NON_MEMBER_AUTHOR" ]
        },
        "entityFilterAttributeName" : {
          "type" : "string"
        },
        "entityFilter" : {
          "type" : "string"
        },
        "fieldType" : {
          "type" : "string"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "limit" : {
          "type" : "string"
        },
        "limitType" : {
          "type" : "string",
          "enum" : [ "CHARS", "WORDS", "FILE_SIZE", "CHOICE" ]
        },
        "customFieldValueOptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomFieldValueOption"
          }
        }
      },
      "description" : "Model reprensenting Custom field definition"
    },
    "ContributionTemplateTransfer" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "templateSections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTemplateSectionTransfer"
          }
        }
      }
    },
    "ResourceSpace" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "resourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ASSEMBLY", "CAMPAIGN", "WORKING_GROUP", "COMPONENT", "CONTRIBUTION", "VOTING_BALLOT" ]
        },
        "parent" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "organizations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Organization"
          }
        },
        "customFieldDefinitions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomFieldDefinition"
          }
        },
        "customFieldValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomFieldValue"
          }
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        },
        "campaigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Campaign"
          }
        },
        "components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Component"
          }
        },
        "milestones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentMilestone"
          }
        },
        "workingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        },
        "contributions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contribution"
          }
        },
        "contributionHistories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionHistory"
          }
        },
        "assemblies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Assembly"
          }
        },
        "resources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Resource"
          }
        },
        "hashtags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Hashtag"
          }
        },
        "ballots" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Ballot"
          }
        },
        "templates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTemplate"
          }
        },
        "consensusBallot" : {
          "type" : "string",
          "format" : "uuid"
        },
        "consensusBallotAsString" : {
          "type" : "string"
        },
        "resourceSpaceUuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "groupsFilteredByTopic" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        },
        "campaignCountByStatus" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "description" : "A Resource Space connects entities in the model to other entities"
    },
    "Campaign" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "campaignId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "shortname" : {
          "type" : "string"
        },
        "goal" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "listed" : {
          "type" : "boolean",
          "default" : false
        },
        "currentBallot" : {
          "type" : "string",
          "format" : "uuid"
        },
        "forum" : {
          "$ref" : "#/definitions/ResourceSpace"
        },
        "resourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourceSpaceUUID" : {
          "type" : "string"
        },
        "forumResourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "forumResourceSpaceUUID" : {
          "type" : "string"
        },
        "components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Component"
          }
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "resourceList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Resource"
          }
        },
        "assemblies" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "existingComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Component"
          }
        },
        "existingConfigs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "existingThemes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        },
        "existingWorkingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        },
        "template" : {
          "$ref" : "#/definitions/CampaignTemplate"
        },
        "cover" : {
          "$ref" : "#/definitions/Resource"
        },
        "logo" : {
          "$ref" : "#/definitions/Resource"
        },
        "externalBallot" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "past" : {
          "type" : "boolean",
          "default" : false
        },
        "upcoming" : {
          "type" : "boolean",
          "default" : false
        },
        "componentsByTimeline" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Component"
          }
        },
        "transientComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Component"
          }
        },
        "ballotIndex" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "number"
          }
        }
      },
      "description" : "Campaigns are actions or processes organized by an Assembly"
    },
    "CampaignSummaryTransfer" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "shortname" : {
          "type" : "string"
        },
        "goal" : {
          "type" : "string"
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigTransfer"
          }
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThemeTransfer"
          }
        },
        "workingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroupSummaryTransfer"
          }
        },
        "timelineEdges" : {
          "$ref" : "#/definitions/CampaignTimelineEdgeTransfer"
        }
      }
    },
    "AssemblyTransfer" : {
      "type" : "object",
      "properties" : {
        "assemblyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "shortname" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "listed" : {
          "type" : "boolean",
          "default" : false
        },
        "invitationEmail" : {
          "type" : "string"
        },
        "profile" : {
          "$ref" : "#/definitions/AssemblyProfileTransfer"
        },
        "location" : {
          "$ref" : "#/definitions/LocationTransfer"
        },
        "organizations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrganizationTransfer"
          }
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThemeTransfer"
          }
        },
        "existingThemes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThemeTransfer"
          }
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigTransfer"
          }
        },
        "invitations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvitationTransfer"
          }
        },
        "linkedAssemblies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LinkedAssemblyTransfer"
          }
        },
        "linkedAssembliesIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "CampaignRequiredConfiguration" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "campaignRequiredConfigurationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "campaignTemplate" : {
          "$ref" : "#/definitions/CampaignTemplate"
        },
        "configDefinition" : {
          "$ref" : "#/definitions/ConfigDefinition"
        }
      },
      "description" : "Required configuration value for a particular campaign"
    },
    "ContributionTemplateSection" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "Section of the template for a contribution"
    },
    "CampaignTimelineEdge" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "edgeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "campaign" : {
          "$ref" : "#/definitions/Campaign"
        },
        "start" : {
          "type" : "boolean",
          "default" : false
        },
        "fromComponent" : {
          "$ref" : "#/definitions/Component"
        },
        "fromComponentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "toComponent" : {
          "$ref" : "#/definitions/Component"
        },
        "toComponentId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Edge in the graph that represents the workflow of components associated to a campaign with a process"
    },
    "TokenAction" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "token" : {
          "type" : "string"
        },
        "targetUser" : {
          "$ref" : "#/definitions/User"
        },
        "targetInvitation" : {
          "$ref" : "#/definitions/MembershipInvitation"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "EMAIL_VERIFICATION", "PASSWORD_RESET", "MEMBERSHIP_INVITATION", "MEMBERSHIP_REQUEST", "FACEBOOK_TOKEN" ]
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expires" : {
          "type" : "string",
          "format" : "date-time"
        },
        "valid" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "description" : "Generated tokens for verificatoin and other security actions"
    },
    "File" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "absolute" : {
          "type" : "boolean",
          "default" : false
        },
        "canonicalPath" : {
          "type" : "string"
        },
        "parentFile" : {
          "$ref" : "#/definitions/File"
        },
        "absolutePath" : {
          "type" : "string"
        },
        "absoluteFile" : {
          "$ref" : "#/definitions/File"
        },
        "canonicalFile" : {
          "$ref" : "#/definitions/File"
        },
        "directory" : {
          "type" : "boolean",
          "default" : false
        },
        "file" : {
          "type" : "boolean",
          "default" : false
        },
        "hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "totalSpace" : {
          "type" : "integer",
          "format" : "int64"
        },
        "freeSpace" : {
          "type" : "integer",
          "format" : "int64"
        },
        "usableSpace" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "NotificationSubscriptionTransfer" : {
      "type" : "object",
      "properties" : {
        "eventId" : {
          "type" : "string"
        },
        "alertEndpoint" : {
          "type" : "string"
        },
        "endpointType" : {
          "type" : "string"
        },
        "origin" : {
          "type" : "string",
          "format" : "uuid"
        },
        "eventName" : {
          "type" : "string",
          "enum" : [ "NEW_CAMPAIGN", "NEW_WORKING_GROUP", "NEW_VOTING_BALLOT", "NEW_MILESTONE", "NEW_CONTRIBUTION_IDEA", "NEW_CONTRIBUTION_PROPOSAL", "NEW_CONTRIBUTION_DISCUSSION", "NEW_CONTRIBUTION_COMMENT", "NEW_CONTRIBUTION_NOTE", "NEW_CONTRIBUTION_FORUM_POST", "NEW_CONTRIBUTION_FEEDBACK", "NEW_CONTRIBUTION_ISSUE", "UPDATED_ASSEMBLY", "UPDATED_CAMPAIGN", "UPDATED_WORKING_GROUP", "UPDATED_VOTING_BALLOT", "UPDATED_MILESTONE", "UPDATED_CONTRIBUTION_IDEA", "UPDATED_CONTRIBUTION_PROPOSAL", "UPDATED_CONTRIBUTION_DISCUSSION", "UPDATED_CONTRIBUTION_COMMENT", "UPDATED_CONTRIBUTION_NOTE", "UPDATED_CONTRIBUTION_FORUM_POST", "UPDATED_CONTRIBUTION_FEEDBACK", "UPDATED_CONTRIBUTION_HISTORY", "MILESTONE_PASSED", "MILESTONE_UPCOMING", "MILESTONE_UPCOMING_IN_A_WEEK", "MILESTONE_UPCOMING_IN_A_DAY", "BALLOT_UPCOMING_IN_A_DAY", "BALLOT_UPCOMING_IN_A_WEEK", "BALLOT_UPCOMING_IN_A_MONTH", "BALLOT_ENDING_IN_A_DAY", "BALLOT_ENDING_IN_A_WEEK", "BALLOT_ENDING_IN_A_MONTH", "UPDATED_ASSEMBLY_CONFIGS", "UPDATED_CAMPAIGN_CONFIGS", "UPDATED_WORKING_GROUP_CONFIGS", "MEMBER_JOINED", "DELETED_CONTRIBUTION", "MODERATED_CONTRIBUTION", "NEW_CONTRIBUTION_FEEDBACK_FLAG", "NEWSLETTER" ]
        }
      },
      "description" : "Basic Notification Subscription"
    },
    "ComponentRequiredMilestone" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "componentRequiredMilestoneId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "noDuration" : {
          "type" : "boolean",
          "default" : false
        },
        "type" : {
          "type" : "string",
          "enum" : [ "START", "END", "REMINDER" ]
        },
        "targetComponentUuidAsString" : {
          "type" : "string"
        },
        "campaignTemplate" : {
          "$ref" : "#/definitions/CampaignTemplate"
        },
        "componentDefinition" : {
          "$ref" : "#/definitions/ComponentDefinition"
        }
      },
      "description" : "A milestone required in the definition of component for a campaign"
    },
    "Organization" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "organizationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "logo" : {
          "$ref" : "#/definitions/Resource"
        }
      },
      "description" : "Model reprensenting Organizations within an Assembly"
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "emailVerified" : {
          "type" : "boolean",
          "default" : false
        },
        "profilePic" : {
          "$ref" : "#/definitions/Resource"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "sessionKey" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SecurityRole"
          }
        },
        "permissions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Permission"
          }
        },
        "providers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "identifier" : {
          "type" : "string"
        }
      },
      "description" : "Model representing each user in AppCivist"
    },
    "UserProfile" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "profileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "address" : {
          "type" : "string"
        },
        "note" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        }
      },
      "description" : "Profile of Users"
    },
    "PadTransfer" : {
      "type" : "object",
      "properties" : {
        "padId" : {
          "type" : "string"
        }
      }
    },
    "AssemblySummaryTransfer" : {
      "type" : "object",
      "properties" : {
        "assemblyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "shortname" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "profile" : {
          "$ref" : "#/definitions/AssemblyProfileTransfer"
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThemeTransfer"
          }
        }
      }
    },
    "Config" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "configTarget" : {
          "type" : "string",
          "enum" : [ "ASSEMBLY", "CAMPAIGN", "COMPONENT", "WORKING_GROUP", "MODULE", "PROPOSAL", "CONTRIBUTION", "USER" ]
        },
        "targetUuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "targetUuidAsString" : {
          "type" : "string"
        },
        "definition" : {
          "$ref" : "#/definitions/ConfigDefinition"
        }
      },
      "description" : "Generic model to store a configuration value"
    },
    "ConfigTransfer" : {
      "type" : "object",
      "properties" : {
        "configId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ContributionFeedback" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "up" : {
          "type" : "boolean",
          "default" : false
        },
        "down" : {
          "type" : "boolean",
          "default" : false
        },
        "fav" : {
          "type" : "boolean",
          "default" : false
        },
        "flag" : {
          "type" : "boolean",
          "default" : false
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "benefit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "need" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feasibility" : {
          "type" : "integer",
          "format" : "int32"
        },
        "elegibility" : {
          "type" : "boolean",
          "default" : false
        },
        "textualFeedback" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "MEMBER", "WORKING_GROUP", "TECHNICAL_ASSESSMENT" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "workingGroupId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "officialGroupFeedback" : {
          "type" : "boolean",
          "default" : false
        },
        "archived" : {
          "type" : "boolean",
          "default" : false
        },
        "nonMemberAuthor" : {
          "$ref" : "#/definitions/NonMemberAuthor"
        },
        "password" : {
          "type" : "string"
        },
        "workingGroupUuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "parentType" : {
          "type" : "string",
          "enum" : [ "ISSUE", "QUESTION", "IDEA", "COMMENT", "PROPOSAL", "ASSESSMENT", "FORUM_POST", "ACTION_ITEM", "DISCUSSION", "BRAINSTORMING", "DELIBERATIVE_DISCUSSION", "NOTE" ]
        },
        "contributionId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Feedback associated to a contribution"
    },
    "WorkingGroupProfileTransfer" : {
      "type" : "object",
      "properties" : {
        "workingGroupProfileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "supportedMembership" : {
          "type" : "string",
          "enum" : [ "OPEN", "INVITATION", "REQUEST", "INVITATION_AND_REQUEST" ]
        },
        "managementType" : {
          "type" : "string",
          "enum" : [ "OPEN", "COORDINATED", "MODERATED", "COORDINATED_AND_MODERATED", "DEMOCRATIC" ]
        },
        "icon" : {
          "type" : "string"
        },
        "cover" : {
          "type" : "string"
        }
      }
    },
    "BallotConfiguration" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ballotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "removed" : {
          "type" : "boolean",
          "default" : false
        },
        "removedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "description" : "key,value configurations for a voting ballot"
    },
    "S3File" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/File"
        },
        "url" : {
          "type" : "string",
          "format" : "url"
        }
      }
    },
    "ComponentMilestoneTransfer" : {
      "type" : "object",
      "properties" : {
        "milestoneId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "start" : {
          "type" : "string",
          "format" : "date-time"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "days" : {
          "type" : "integer",
          "format" : "int32"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "mainContributionType" : {
          "type" : "string",
          "enum" : [ "ISSUE", "QUESTION", "IDEA", "COMMENT", "PROPOSAL", "ASSESSMENT", "FORUM_POST", "ACTION_ITEM", "DISCUSSION", "BRAINSTORMING", "DELIBERATIVE_DISCUSSION", "NOTE" ]
        }
      }
    },
    "CampaignTimelineEdgeTransfer" : {
      "type" : "object",
      "properties" : {
        "edgeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fromComponent" : {
          "$ref" : "#/definitions/Component"
        },
        "fromComponentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "toComponent" : {
          "$ref" : "#/definitions/Component"
        },
        "toComponentId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ConfigDefinition" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "key" : {
          "type" : "string"
        },
        "valueType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "configTarget" : {
          "type" : "string",
          "enum" : [ "ASSEMBLY", "CAMPAIGN", "COMPONENT", "WORKING_GROUP", "MODULE", "PROPOSAL", "CONTRIBUTION", "USER" ]
        }
      },
      "description" : "Definition of a configuration value"
    },
    "Component" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "componentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "IDEAS", "PROPOSALS", "DELIBERATION", "VOTING", "IMPLEMENTATION" ]
        },
        "key" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeline" : {
          "type" : "integer",
          "format" : "int32"
        },
        "linked" : {
          "type" : "boolean",
          "default" : false
        },
        "fromEdges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CampaignTimelineEdge"
          }
        },
        "toEdges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CampaignTimelineEdge"
          }
        },
        "definition" : {
          "$ref" : "#/definitions/ComponentDefinition"
        },
        "resourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourceSpaceUUID" : {
          "type" : "string"
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "milestones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentMilestone"
          }
        },
        "contributions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contribution"
          }
        },
        "templates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTemplate"
          }
        }
      },
      "description" : "A component represents a space of action within a campaign. It can be the stage in a process or the space of deliberation when a campaign des not have a process"
    },
    "ContributionHistory" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "contributionHistoryId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "contributionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ISSUE", "QUESTION", "IDEA", "COMMENT", "PROPOSAL", "ASSESSMENT", "FORUM_POST", "ACTION_ITEM", "DISCUSSION", "BRAINSTORMING", "DELIBERATIVE_DISCUSSION", "NOTE" ]
        },
        "textIndex" : {
          "type" : "string"
        },
        "moderationComment" : {
          "type" : "string"
        },
        "budget" : {
          "type" : "string"
        },
        "actionDueDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "actionDone" : {
          "type" : "boolean",
          "default" : false
        },
        "action" : {
          "type" : "string"
        },
        "assessmentSummary" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        },
        "changes" : {
          "$ref" : "#/definitions/ContributionHistoryItem"
        }
      },
      "description" : "History of changes and events related to a contribution"
    },
    "ContributionHistoryExternalChange" : {
      "type" : "object",
      "properties" : {
        "externalRef" : {
          "type" : "string"
        },
        "externalRefId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "changeType" : {
          "type" : "string",
          "enum" : [ "ADDED", "DELETED", "MODIFIED" ]
        }
      }
    },
    "Pair" : {
      "type" : "object",
      "properties" : {
        "first" : {
          "type" : "number"
        },
        "second" : {
          "type" : "number"
        }
      }
    },
    "Hashtag" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "hashtagId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hashtag" : {
          "type" : "string"
        }
      },
      "description" : "Hashtags represents keywords associated to resources in the system"
    },
    "MyLogin" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "CampaignTemplateTransfer" : {
      "type" : "object"
    },
    "ResourceTransfer" : {
      "type" : "object",
      "properties" : {
        "resourceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "url" : {
          "type" : "string",
          "format" : "url"
        },
        "creator" : {
          "$ref" : "#/definitions/UserTransfer"
        },
        "location" : {
          "$ref" : "#/definitions/LocationTransfer"
        },
        "resourceType" : {
          "type" : "string",
          "enum" : [ "PROPOSAL", "PICTURE", "VIDEO", "PAD", "TEXT", "WEBPAGE", "FILE", "AUDIO", "CONTRIBUTION_TEMPLATE", "GDOC" ]
        },
        "name" : {
          "type" : "string"
        },
        "padId" : {
          "type" : "string"
        },
        "readOnlyPadId" : {
          "type" : "string"
        },
        "resourceSpaceWithServerConfigs" : {
          "type" : "string",
          "format" : "uuid"
        },
        "urlLarge" : {
          "type" : "string",
          "format" : "url"
        },
        "urlMedium" : {
          "type" : "string",
          "format" : "url"
        },
        "urlThumbnail" : {
          "type" : "string",
          "format" : "url"
        }
      }
    },
    "ObjectNode" : {
      "type" : "object",
      "properties" : {
        "nodeType" : {
          "type" : "string",
          "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
        },
        "valueNode" : {
          "type" : "boolean",
          "default" : false
        },
        "binary" : {
          "type" : "boolean",
          "default" : false
        },
        "float" : {
          "type" : "boolean",
          "default" : false
        },
        "containerNode" : {
          "type" : "boolean",
          "default" : false
        },
        "missingNode" : {
          "type" : "boolean",
          "default" : false
        },
        "object" : {
          "type" : "boolean",
          "default" : false
        },
        "pojo" : {
          "type" : "boolean",
          "default" : false
        },
        "number" : {
          "type" : "boolean",
          "default" : false
        },
        "integralNumber" : {
          "type" : "boolean",
          "default" : false
        },
        "floatingPointNumber" : {
          "type" : "boolean",
          "default" : false
        },
        "short" : {
          "type" : "boolean",
          "default" : false
        },
        "int" : {
          "type" : "boolean",
          "default" : false
        },
        "long" : {
          "type" : "boolean",
          "default" : false
        },
        "double" : {
          "type" : "boolean",
          "default" : false
        },
        "bigDecimal" : {
          "type" : "boolean",
          "default" : false
        },
        "bigInteger" : {
          "type" : "boolean",
          "default" : false
        },
        "textual" : {
          "type" : "boolean",
          "default" : false
        },
        "boolean" : {
          "type" : "boolean",
          "default" : false
        },
        "array" : {
          "type" : "boolean",
          "default" : false
        },
        "null" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ContributionTransfer" : {
      "type" : "object",
      "properties" : {
        "contributionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ISSUE", "QUESTION", "IDEA", "COMMENT", "PROPOSAL", "ASSESSMENT", "FORUM_POST", "ACTION_ITEM", "DISCUSSION", "BRAINSTORMING", "DELIBERATIVE_DISCUSSION", "NOTE" ]
        },
        "textIndex" : {
          "type" : "string"
        },
        "location" : {
          "$ref" : "#/definitions/LocationTransfer"
        },
        "budget" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserTransfer"
          }
        },
        "workingGroupAuthors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroupTransfer"
          }
        },
        "stats" : {
          "$ref" : "#/definitions/ContributionStatisticsTransfer"
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThemeTransfer"
          }
        },
        "attachments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ResourceTransfer"
          }
        },
        "comments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTransfer"
          }
        },
        "associatedMilestones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentMilestoneTransfer"
          }
        },
        "inspirations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTransfer"
          }
        },
        "actionDueDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "actionDone" : {
          "type" : "boolean",
          "default" : false
        },
        "action" : {
          "type" : "string"
        },
        "assessmentSummary" : {
          "type" : "string"
        },
        "extendedTextPad" : {
          "$ref" : "#/definitions/ResourceTransfer"
        },
        "assessments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTransfer"
          }
        },
        "existingResponsibleWorkingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroupTransfer"
          }
        },
        "existingContributions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContributionTransfer"
          }
        }
      }
    },
    "ComponentMilestone" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "componentMilestoneId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "days" : {
          "type" : "integer",
          "format" : "int32"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "START", "END", "REMINDER" ]
        },
        "mainContributionType" : {
          "type" : "string",
          "enum" : [ "ISSUE", "QUESTION", "IDEA", "COMMENT", "PROPOSAL", "ASSESSMENT", "FORUM_POST", "ACTION_ITEM", "DISCUSSION", "BRAINSTORMING", "DELIBERATIVE_DISCUSSION", "NOTE" ]
        }
      },
      "description" : "Milestone associated to a component. It represents a deadline within that component"
    },
    "AssemblyProfileTransfer" : {
      "type" : "object",
      "properties" : {
        "targetAudience" : {
          "type" : "string"
        },
        "supportedMembership" : {
          "type" : "string",
          "enum" : [ "OPEN", "INVITATION", "REQUEST", "INVITATION_AND_REQUEST" ]
        },
        "managementType" : {
          "type" : "string",
          "enum" : [ "OPEN", "COORDINATED", "MODERATED", "COORDINATED_AND_MODERATED", "DEMOCRATIC" ]
        },
        "icon" : {
          "type" : "string"
        },
        "cover" : {
          "type" : "string"
        },
        "primaryContactName" : {
          "type" : "string"
        },
        "primaryContactPhone" : {
          "type" : "string"
        },
        "primaryContactEmail" : {
          "type" : "string"
        }
      }
    },
    "Ballot" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "password" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "string"
        },
        "notes" : {
          "type" : "string"
        },
        "votingSystemType" : {
          "type" : "string",
          "enum" : [ "RANGE", "RANKED", "DISTRIBUTED", "PLURALITY", "CONSENSUS" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "ARCHIVED", "DRAFT" ]
        },
        "requireRegistration" : {
          "type" : "boolean",
          "default" : false
        },
        "userUuidAsSignature" : {
          "type" : "boolean",
          "default" : false
        },
        "decisionType" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string"
        },
        "startsAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endsAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "removed" : {
          "type" : "boolean",
          "default" : false
        },
        "removedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "votesLimit" : {
          "type" : "string",
          "description" : "The limit on the votes a voter can give on this ballot"
        },
        "votesLimitMeaning" : {
          "type" : "string",
          "description" : "Meaning of the limit on the votes",
          "enum" : [ "SELECTIONS", "TOKENS", "RANGE" ]
        },
        "ballotCandidates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BallotCandidate"
          }
        },
        "componentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ballotCandidatesIndex" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "candidatesNumber" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "Represents a ballot used for voting on AppCivist Core resources (contributions, users, working groups, themes, etc.)"
    },
    "CampaignTransfer" : {
      "type" : "object",
      "properties" : {
        "campaignId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "shortname" : {
          "type" : "string"
        },
        "goal" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "listed" : {
          "type" : "boolean",
          "default" : false
        },
        "currentBallot" : {
          "type" : "string",
          "format" : "uuid"
        },
        "cover" : {
          "$ref" : "#/definitions/ResourceTransfer"
        },
        "components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentTransfer"
          }
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigTransfer"
          }
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThemeTransfer"
          }
        },
        "workingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroupTransfer"
          }
        },
        "assemblies" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "ballots" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Ballot"
          }
        },
        "existingComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentTransfer"
          }
        },
        "existingConfigs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigTransfer"
          }
        },
        "existingThemes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThemeTransfer"
          }
        },
        "existingWorkingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroupTransfer"
          }
        },
        "template" : {
          "$ref" : "#/definitions/CampaignTemplateTransfer"
        },
        "timelineEdges" : {
          "$ref" : "#/definitions/CampaignTimelineEdgeTransfer"
        }
      }
    },
    "WorkingGroup" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "groupId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "listed" : {
          "type" : "boolean",
          "default" : false
        },
        "isTopic" : {
          "type" : "boolean",
          "default" : false
        },
        "majorityThreshold" : {
          "type" : "string"
        },
        "blockMajority" : {
          "type" : "boolean",
          "default" : false
        },
        "consensusBallot" : {
          "type" : "string",
          "format" : "uuid"
        },
        "consensusBallotAsString" : {
          "type" : "string"
        },
        "creator" : {
          "$ref" : "#/definitions/User"
        },
        "profile" : {
          "$ref" : "#/definitions/WorkingGroupProfile"
        },
        "invitationEmail" : {
          "type" : "string"
        },
        "invitations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvitationTransfer"
          }
        },
        "proposals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contribution"
          }
        },
        "ballots" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Ballot"
          }
        },
        "forumResourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourcesResourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "assemblies" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "campaigns" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Location"
          }
        },
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "forumResourceSpaceUUID" : {
          "type" : "string"
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        },
        "managementType" : {
          "type" : "string",
          "enum" : [ "OPEN", "COORDINATED", "MODERATED", "COORDINATED_AND_MODERATED", "DEMOCRATIC" ]
        },
        "forumPosts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contribution"
          }
        },
        "resourcesResourceSpaceUUID" : {
          "type" : "string"
        },
        "supportedMembership" : {
          "type" : "string",
          "enum" : [ "OPEN", "INVITATION", "REQUEST", "INVITATION_AND_REQUEST" ]
        }
      },
      "description" : "Model reprensenting Working Groups within an Assembly"
    },
    "ThemeTransfer" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "InvitationTransfer" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "moderator" : {
          "type" : "boolean",
          "default" : false
        },
        "coordinator" : {
          "type" : "boolean",
          "default" : false
        },
        "targetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "targetType" : {
          "type" : "string"
        },
        "invitationEmail" : {
          "type" : "string"
        }
      }
    },
    "CampaignTemplate" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "campaignTemplateId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nameKey" : {
          "type" : "string",
          "enum" : [ "PARTICIPATORY_BUDGETING", "OCCUPY_ACTION", "AWARENESS_RAISING", "ACTION_PROMOTION", "MOBILIZATION", "FUNDRAISING", "PROPOSAL_MAKING" ]
        },
        "name" : {
          "type" : "string"
        },
        "defComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentDefinition"
          }
        },
        "reqConfigs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CampaignRequiredConfiguration"
          }
        }
      },
      "description" : "A template for a campaign is composed by specified component definitions that can be used to instantiate a campaign of a certain type"
    },
    "NonMemberAuthor" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string",
          "format" : "url"
        },
        "gender" : {
          "type" : "string"
        },
        "age" : {
          "type" : "integer",
          "format" : "int32"
        },
        "source" : {
          "type" : "string"
        },
        "sourceUrl" : {
          "type" : "string"
        },
        "publishContact" : {
          "type" : "boolean",
          "default" : false
        },
        "subscribed" : {
          "type" : "boolean",
          "default" : false
        },
        "phone" : {
          "type" : "string"
        },
        "customFieldValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomFieldValue"
          }
        }
      },
      "description" : "Author of contributions who are not users of the platform"
    },
    "LinkedAssemblyTransfer" : {
      "type" : "object",
      "properties" : {
        "assemblyId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PasswordChange" : {
      "type" : "object",
      "properties" : {
        "oldPassword" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "repeatPassword" : {
          "type" : "string"
        }
      }
    },
    "WorkingGroupSummaryTransfer" : {
      "type" : "object",
      "properties" : {
        "groupId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "listed" : {
          "type" : "boolean",
          "default" : false
        },
        "majorityThreshold" : {
          "type" : "string"
        },
        "blockMajority" : {
          "type" : "boolean",
          "default" : false
        },
        "profile" : {
          "$ref" : "#/definitions/WorkingGroupProfileTransfer"
        },
        "existingThemes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThemeTransfer"
          }
        }
      }
    },
    "TransferResponseStatus" : {
      "type" : "object",
      "properties" : {
        "responseStatus" : {
          "type" : "string",
          "description" : "Status of the request",
          "enum" : [ "BADREQUEST", "UNAUTHORIZED", "SERVERERROR", "NOTAVAILABLE", "NODATA", "OK" ]
        },
        "responseMessage" : {
          "type" : "string",
          "description" : "Message explaining the response"
        },
        "errorTrace" : {
          "type" : "string",
          "description" : "Error trace for more details (if there is an error trace)"
        },
        "newResourceId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "If the status is OK and a new resource was created, this will indicate the new resource ID"
        },
        "newResourceUrl" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "If the status is OK and a new resource was created, this will indicate the new resource URL"
        },
        "newResourceUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "If the status is OK and a new resource was created, this will indicate the new resource Universal ID"
        }
      },
      "description" : "Response Model used for ERRORS in the API"
    },
    "FrontEndError" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Theme" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "themeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "icon" : {
          "type" : "string"
        },
        "cover" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "OFFICIAL_PRE_DEFINED", "OFFICIAL", "EMERGENT" ]
        }
      },
      "description" : "A Theme represents a top level categorization information"
    },
    "AppCivistBaseModel" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "read" : {
          "type" : "boolean",
          "default" : false
        },
        "signal" : {
          "$ref" : "#/definitions/NotificationEventSignal"
        }
      },
      "description" : "AppCivist base data model"
    },
    "ContributionStatistics" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "ups" : {
          "type" : "integer",
          "format" : "int64"
        },
        "downs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "favs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "flags" : {
          "type" : "integer",
          "format" : "int64"
        },
        "points" : {
          "type" : "integer",
          "format" : "int64"
        },
        "averageBenefit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "averageNeed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "averageFeasibility" : {
          "type" : "integer",
          "format" : "int32"
        },
        "eligibilityTrue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "eligibilityFalse" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        }
      },
      "description" : "Summarizes basic statistics on a contribution"
    },
    "LocationTransfer" : {
      "type" : "object",
      "properties" : {
        "street" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "geoJson" : {
          "type" : "string"
        }
      }
    },
    "ContributionHistoryAssociationChange" : {
      "type" : "object",
      "properties" : {
        "resourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ASSEMBLY", "CAMPAIGN", "WORKING_GROUP", "COMPONENT", "CONTRIBUTION", "VOTING_BALLOT" ]
        },
        "changeType" : {
          "type" : "string",
          "enum" : [ "ADDED", "DELETED" ]
        }
      }
    },
    "CustomFieldValueOption" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "customFieldValueOptionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "valueType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "description" : "Model reprensenting Custom field value option"
    },
    "NotificationEventSignal" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "spaceType" : {
          "type" : "string",
          "enum" : [ "ASSEMBLY", "CAMPAIGN", "WORKING_GROUP", "COMPONENT", "CONTRIBUTION", "VOTING_BALLOT" ]
        },
        "signalType" : {
          "type" : "string",
          "enum" : [ "REGULAR", "NEWSLETTER" ]
        },
        "eventId" : {
          "type" : "string",
          "enum" : [ "NEW_CAMPAIGN", "NEW_WORKING_GROUP", "NEW_VOTING_BALLOT", "NEW_MILESTONE", "NEW_CONTRIBUTION_IDEA", "NEW_CONTRIBUTION_PROPOSAL", "NEW_CONTRIBUTION_DISCUSSION", "NEW_CONTRIBUTION_COMMENT", "NEW_CONTRIBUTION_NOTE", "NEW_CONTRIBUTION_FORUM_POST", "NEW_CONTRIBUTION_FEEDBACK", "NEW_CONTRIBUTION_ISSUE", "UPDATED_ASSEMBLY", "UPDATED_CAMPAIGN", "UPDATED_WORKING_GROUP", "UPDATED_VOTING_BALLOT", "UPDATED_MILESTONE", "UPDATED_CONTRIBUTION_IDEA", "UPDATED_CONTRIBUTION_PROPOSAL", "UPDATED_CONTRIBUTION_DISCUSSION", "UPDATED_CONTRIBUTION_COMMENT", "UPDATED_CONTRIBUTION_NOTE", "UPDATED_CONTRIBUTION_FORUM_POST", "UPDATED_CONTRIBUTION_FEEDBACK", "UPDATED_CONTRIBUTION_HISTORY", "MILESTONE_PASSED", "MILESTONE_UPCOMING", "MILESTONE_UPCOMING_IN_A_WEEK", "MILESTONE_UPCOMING_IN_A_DAY", "BALLOT_UPCOMING_IN_A_DAY", "BALLOT_UPCOMING_IN_A_WEEK", "BALLOT_UPCOMING_IN_A_MONTH", "BALLOT_ENDING_IN_A_DAY", "BALLOT_ENDING_IN_A_WEEK", "BALLOT_ENDING_IN_A_MONTH", "UPDATED_ASSEMBLY_CONFIGS", "UPDATED_CAMPAIGN_CONFIGS", "UPDATED_WORKING_GROUP_CONFIGS", "MEMBER_JOINED", "DELETED_CONTRIBUTION", "MODERATED_CONTRIBUTION", "NEW_CONTRIBUTION_FEEDBACK_FLAG", "NEWSLETTER" ]
        },
        "title" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "number"
          }
        }
      },
      "description" : "A notification event signal is a single notification that is signaled (i.e., sent) to users who have subscribed to the event name in the resource space"
    },
    "OrganizationTransfer" : {
      "type" : "object",
      "properties" : {
        "organizationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "logo" : {
          "$ref" : "#/definitions/ResourceTransfer"
        }
      }
    },
    "Contribution" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "contributionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Contribution numerical ID"
        },
        "source" : {
          "type" : "string"
        },
        "sourceUrl" : {
          "type" : "string"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "nonMemberAuthors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NonMemberAuthor"
          }
        },
        "budget" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "array",
          "description" : "List of authors when is more then one but not a working group",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        },
        "popularity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "commentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "forumCommentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalComments" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pinned" : {
          "type" : "boolean",
          "default" : false
        },
        "firstAuthor" : {
          "description" : "Read only property displaying the first information",
          "readOnly" : true,
          "$ref" : "#/definitions/User"
        },
        "firstAuthorName" : {
          "type" : "string",
          "description" : "Read only property displaying the first author name",
          "readOnly" : true
        },
        "assemblyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Read only property displaying the Assembly where this Contribution was created",
          "readOnly" : true
        },
        "workingGroupAuthors" : {
          "type" : "array",
          "description" : "Working Groups to which this Contribution is associated",
          "items" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        },
        "forum" : {
          "$ref" : "#/definitions/ResourceSpace"
        },
        "stats" : {
          "$ref" : "#/definitions/ContributionStatistics"
        },
        "themes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        },
        "attachments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Resource"
          }
        },
        "hashtags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Hashtag"
          }
        },
        "associatedMilestones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentMilestone"
          }
        },
        "assignToContributions" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "actionDueDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "actionDone" : {
          "type" : "boolean",
          "default" : false
        },
        "action" : {
          "type" : "string"
        },
        "assessmentSummary" : {
          "type" : "string"
        },
        "extendedTextPad" : {
          "$ref" : "#/definitions/Resource"
        },
        "cover" : {
          "$ref" : "#/definitions/Resource"
        },
        "publicRevision" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sourceCode" : {
          "type" : "string"
        },
        "assessments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contribution"
          }
        },
        "officialThemes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        },
        "emergentThemes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Theme"
          }
        },
        "document" : {
          "type" : "string"
        },
        "campaignIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "containingContributionsIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "campaignUuids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "workingGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkingGroup"
          }
        },
        "resourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourceSpaceUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "forumResourceSpaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "forumResourceSpaceUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "readOnlyPadUrl" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "position" : 1,
          "description" : "Contribution Universal ID (meant to be valid accross intances of the platform)"
        },
        "title" : {
          "type" : "string",
          "position" : 2,
          "description" : "Title of the contribution"
        },
        "text" : {
          "type" : "string",
          "position" : 3,
          "description" : "Text describing the contribution"
        },
        "plainText" : {
          "type" : "string",
          "position" : 3,
          "description" : "Text describing the contribution, in plain text format"
        },
        "type" : {
          "type" : "string",
          "position" : 4,
          "description" : "Type of Contribution",
          "enum" : [ "ISSUE", "QUESTION", "IDEA", "COMMENT", "PROPOSAL", "ASSESSMENT", "FORUM_POST", "ACTION_ITEM", "DISCUSSION", "BRAINSTORMING", "DELIBERATIVE_DISCUSSION", "NOTE" ]
        },
        "status" : {
          "type" : "string",
          "position" : 5,
          "description" : "Status of the Contribution (e.g., new, in progress, published, etc.)",
          "enum" : [ "DRAFT", "NEW", "PUBLISHED", "EXCLUDED", "ARCHIVED", "MODERATED", "INBALLOT", "SELECTED" ]
        },
        "moderationComment" : {
          "type" : "string",
          "position" : 6,
          "description" : "Comment explaining why a contribution is moderated (e.g., deleted, changed status, etc.)"
        },
        "nonMemberAuthor" : {
          "position" : 7,
          "description" : "Author associated to the contribution when it is not an AppCivist User",
          "$ref" : "#/definitions/NonMemberAuthor"
        }
      },
      "description" : "Generic model for citizen contributions. A contribuiton represents IDEAS, PROPOSALS, DISCUSSION, COMMENTS, NOTES, ISSUES, ETC. "
    },
    "ComponentDefinition" : {
      "type" : "object",
      "properties" : {
        "creation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was created"
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was last updated"
        },
        "lang" : {
          "type" : "string",
          "description" : "Language of the content in this resource"
        },
        "removal" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date in which this resource was removed"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "Indicates if this resource is logically deleted",
          "default" : false
        },
        "componentDefId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "uuidAsString" : {
          "type" : "string"
        },
        "requiredConfigurations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentRequiredConfiguration"
          }
        },
        "requiredMilestones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentRequiredMilestone"
          }
        }
      },
      "description" : "Definition of a component that can be used to create a workflow of a campaign."
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "locationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "placeName" : {
          "type" : "string"
        },
        "street" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "geoJson" : {
          "type" : "string"
        },
        "bestCoordinates" : {
          "type" : "integer",
          "format" : "int32"
        },
        "source" : {
          "type" : "string"
        },
        "markedForReview" : {
          "type" : "boolean",
          "default" : false
        },
        "additionInfo" : {
          "type" : "string"
        }
      }
    }
  }
}